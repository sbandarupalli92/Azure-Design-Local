{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Sanmit Biraj - v-sabiraj@microsoft.com",
    "comments": "Solution template for CiscoWSA"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "formattedTimeNow": {
      "type": "string",
      "defaultValue": "[utcNow('g')]",
      "metadata": {
        "description": "Appended to workbook displayNames to make them unique"
      }
    },
    "workbook1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "CiscoWSA",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic4-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic5-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic6-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic7-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic8-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic9-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic10-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic11-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "connector1-name": {
      "type": "string",
      "defaultValue": "cc2f1351-e406-4524-9b53-ed3a33884104"
    }
  },
  "variables": {
    "CiscoWSA_workbook": "CiscoWSA_workbook",
    "_CiscoWSA_workbook": "[variables('CiscoWSA_workbook')]",
    "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
    "_workbook-source": "[variables('workbook-source')]",
    "CiscoWSAAccessToUnwantedSite_AnalyticalRules": "CiscoWSAAccessToUnwantedSite_AnalyticalRules",
    "_CiscoWSAAccessToUnwantedSite_AnalyticalRules": "[variables('CiscoWSAAccessToUnwantedSite_AnalyticalRules')]",
    "CiscoWSADataExfiltration_AnalyticalRules": "CiscoWSADataExfiltration_AnalyticalRules",
    "_CiscoWSADataExfiltration_AnalyticalRules": "[variables('CiscoWSADataExfiltration_AnalyticalRules')]",
    "CiscoWSAMultipleErrorsToUnwantedCategory_AnalyticalRules": "CiscoWSAMultipleErrorsToUnwantedCategory_AnalyticalRules",
    "_CiscoWSAMultipleErrorsToUnwantedCategory_AnalyticalRules": "[variables('CiscoWSAMultipleErrorsToUnwantedCategory_AnalyticalRules')]",
    "CiscoWSAMultipleErrorsToUrl_AnalyticalRules": "CiscoWSAMultipleErrorsToUrl_AnalyticalRules",
    "_CiscoWSAMultipleErrorsToUrl_AnalyticalRules": "[variables('CiscoWSAMultipleErrorsToUrl_AnalyticalRules')]",
    "CiscoWSAMultipleInfectedFiles_AnalyticalRules": "CiscoWSAMultipleInfectedFiles_AnalyticalRules",
    "_CiscoWSAMultipleInfectedFiles_AnalyticalRules": "[variables('CiscoWSAMultipleInfectedFiles_AnalyticalRules')]",
    "CiscoWSAMultipleUnwantedFileTypes_AnalyticalRules": "CiscoWSAMultipleUnwantedFileTypes_AnalyticalRules",
    "_CiscoWSAMultipleUnwantedFileTypes_AnalyticalRules": "[variables('CiscoWSAMultipleUnwantedFileTypes_AnalyticalRules')]",
    "CiscoWSAProtocolAbuse_AnalyticalRules": "CiscoWSAProtocolAbuse_AnalyticalRules",
    "_CiscoWSAProtocolAbuse_AnalyticalRules": "[variables('CiscoWSAProtocolAbuse_AnalyticalRules')]",
    "CiscoWSAPublicIPSource_AnalyticalRules": "CiscoWSAPublicIPSource_AnalyticalRules",
    "_CiscoWSAPublicIPSource_AnalyticalRules": "[variables('CiscoWSAPublicIPSource_AnalyticalRules')]",
    "CiscoWSAUnexpectedFileType_AnalyticalRules": "CiscoWSAUnexpectedFileType_AnalyticalRules",
    "_CiscoWSAUnexpectedFileType_AnalyticalRules": "[variables('CiscoWSAUnexpectedFileType_AnalyticalRules')]",
    "CiscoWSAUnexpectedUrl_AnalyticalRules": "CiscoWSAUnexpectedUrl_AnalyticalRules",
    "_CiscoWSAUnexpectedUrl_AnalyticalRules": "[variables('CiscoWSAUnexpectedUrl_AnalyticalRules')]",
    "CiscoWSAUnscannableFile_AnalyticalRules": "CiscoWSAUnscannableFile_AnalyticalRules",
    "_CiscoWSAUnscannableFile_AnalyticalRules": "[variables('CiscoWSAUnscannableFile_AnalyticalRules')]",
    "CiscoWSABlockedFiles_HuntingQueries": "CiscoWSABlockedFiles_HuntingQueries",
    "_CiscoWSABlockedFiles_HuntingQueries": "[variables('CiscoWSABlockedFiles_HuntingQueries')]",
    "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
    "CiscoWSARareApplications_HuntingQueries": "CiscoWSARareApplications_HuntingQueries",
    "_CiscoWSARareApplications_HuntingQueries": "[variables('CiscoWSARareApplications_HuntingQueries')]",
    "CiscoWSATopApplications_HuntingQueries": "CiscoWSATopApplications_HuntingQueries",
    "_CiscoWSATopApplications_HuntingQueries": "[variables('CiscoWSATopApplications_HuntingQueries')]",
    "CiscoWSATopResources_HuntingQueries": "CiscoWSATopResources_HuntingQueries",
    "_CiscoWSATopResources_HuntingQueries": "[variables('CiscoWSATopResources_HuntingQueries')]",
    "CiscoWSAUncategorizedResources_HuntingQueries": "CiscoWSAUncategorizedResources_HuntingQueries",
    "_CiscoWSAUncategorizedResources_HuntingQueries": "[variables('CiscoWSAUncategorizedResources_HuntingQueries')]",
    "CiscoWSAUploadedFiles_HuntingQueries": "CiscoWSAUploadedFiles_HuntingQueries",
    "_CiscoWSAUploadedFiles_HuntingQueries": "[variables('CiscoWSAUploadedFiles_HuntingQueries')]",
    "CiscoWSAUrlRareErrorUrl_HuntingQueries": "CiscoWSAUrlRareErrorUrl_HuntingQueries",
    "_CiscoWSAUrlRareErrorUrl_HuntingQueries": "[variables('CiscoWSAUrlRareErrorUrl_HuntingQueries')]",
    "CiscoWSAUrlShortenerLinks_HuntingQueries": "CiscoWSAUrlShortenerLinks_HuntingQueries",
    "_CiscoWSAUrlShortenerLinks_HuntingQueries": "[variables('CiscoWSAUrlShortenerLinks_HuntingQueries')]",
    "CiscoWSAUrlSuspiciousResources_HuntingQueries": "CiscoWSAUrlSuspiciousResources_HuntingQueries",
    "_CiscoWSAUrlSuspiciousResources_HuntingQueries": "[variables('CiscoWSAUrlSuspiciousResources_HuntingQueries')]",
    "CiscoWSAUrlUsersWithErrors_HuntingQueries": "CiscoWSAUrlUsersWithErrors_HuntingQueries",
    "_CiscoWSAUrlUsersWithErrors_HuntingQueries": "[variables('CiscoWSAUrlUsersWithErrors_HuntingQueries')]",
    "CiscoWSAEvent_Parser": "CiscoWSAEvent_Parser",
    "_CiscoWSAEvent_Parser": "[variables('CiscoWSAEvent_Parser')]",
    "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
    "_connector1-source": "[variables('connector1-source')]",
    "CiscoWSAConnector": "CiscoWSAConnector",
    "_CiscoWSAConnector": "[variables('CiscoWSAConnector')]",
    "sourceId": "azuresentinel.azure-sentinel-solution-ciscowsa",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook1-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2021-08-01",
      "properties": {
        "displayName": "[concat(parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"**NOTE**: This data connector depends on a parser based on Kusto Function **CiscoWSAEvent** to work as expected. [Follow steps to get this Kusto Function](https://aka.ms/sentinel-ciscowsa-parser)\"},\"name\":\"text - 8\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"cd8447d9-b096-4673-92d8-2a1e8291a125\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"description\":\"Sets the time name for analysis\",\"value\":{\"durationMs\":2592000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":86400000},{\"durationMs\":604800000},{\"durationMs\":2592000000},{\"durationMs\":7776000000}]},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoWSAEvent\\r\\n| make-series TotalEvents = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain};\",\"size\":0,\"title\":\"Events Over Time\",\"color\":\"blueDark\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"graphSettings\":{\"type\":0}},\"customWidth\":\"60\",\"name\":\"query - 12\",\"styleSettings\":{\"maxWidth\":\"55\"}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Sources Summary\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoWSAEvent\\r\\n| where isnotempty(SrcIpAddr)\\r\\n| summarize dcount(SrcIpAddr)\",\"size\":3,\"title\":\"IP Addresses\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"50\",\"name\":\"query - 3\",\"styleSettings\":{\"margin\":\"10\",\"padding\":\"10\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoWSAEvent\\n| where isnotempty(SrcUserName)\\n| where SrcUserName != '-'\\n| summarize dcount(SrcUserName)\",\"size\":3,\"title\":\"Users\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoWSAEvent\\n| where isnotempty(DstBytes)\\n| summarize tb = sum(tolong(DstBytes))\\n| project mb = tb / 1000000\",\"size\":3,\"title\":\"Total Traffic Volume (MB)\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"50\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoWSAEvent\\n| where DvcAction startswith 'BLOCK_'\\n| summarize count()\",\"size\":3,\"title\":\"Threats Blocked\",\"noDataMessage\":\"0\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"50\",\"name\":\"query - 3\"}]},\"customWidth\":\"40\",\"name\":\"group - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoWSAEvent\\n| summarize count() by UrlCategory\\n| project count_, ['URL Category'] = case(UrlCategory =~ 'IW_infr', \\\"Infrastructure and CDN\\\", \\n                                    UrlCategory =~ 'IW_adv', \\\"Advertisements\\\", \\n                                    UrlCategory =~ 'IW_art', \\\"Arts\\\",\\n                                    UrlCategory =~ 'IW_busi', \\\"Business and Industry\\\",\\n                                    UrlCategory =~ 'IW_csec', \\\"Computer Security\\\",\\n                                    UrlCategory =~ 'IW_comp', \\\"Computers and Internet\\\",\\n                                    UrlCategory =~ 'IW_edu', \\\"Education\\\",\\n                                    UrlCategory =~ 'IW_ent', \\\"Entertainment\\\",\\n                                    UrlCategory =~ 'IW_fts', \\\"File Transfer Services\\\",\\n                                    UrlCategory =~ 'IW_fnnc', \\\"Finance\\\",\\n                                    UrlCategory =~ 'IW_hmed', \\\"Health and Medicine\\\",\\n                                    UrlCategory =~ 'IW_job', \\\"Job Search\\\",\\n                                    UrlCategory =~ 'IW_news', \\\"News\\\",\\n                                    UrlCategory =~ 'IW_docs', \\\"Online Document Sharing and Collaboration\\\",\\n                                    UrlCategory =~ 'IW_meet', \\\"Online Meetings\\\",\\n                                    \\\"Other\\\")\",\"size\":3,\"title\":\"URL Categories\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"35\",\"name\":\"query - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoWSAEvent\\r\\n| summarize count() by UrlCategory\\r\\n| project count_, ['URL Category'] = case(UrlCategory =~ 'IW_infr', \\\"Infrastructure and CDN\\\", \\r\\n                                    UrlCategory =~ 'IW_adv', \\\"Advertisements\\\", \\r\\n                                    UrlCategory =~ 'IW_art', \\\"Arts\\\",\\r\\n                                    UrlCategory =~ 'IW_busi', \\\"Business and Industry\\\",\\r\\n                                    UrlCategory =~ 'IW_csec', \\\"Computer Security\\\",\\r\\n                                    UrlCategory =~ 'IW_comp', \\\"Computers and Internet\\\",\\r\\n                                    UrlCategory =~ 'IW_edu', \\\"Education\\\",\\r\\n                                    UrlCategory =~ 'IW_ent', \\\"Entertainment\\\",\\r\\n                                    UrlCategory =~ 'IW_fts', \\\"File Transfer Services\\\",\\r\\n                                    UrlCategory =~ 'IW_fnnc', \\\"Finance\\\",\\r\\n                                    UrlCategory =~ 'IW_hmed', \\\"Health and Medicine\\\",\\r\\n                                    UrlCategory =~ 'IW_job', \\\"Job Search\\\",\\r\\n                                    UrlCategory =~ 'IW_news', \\\"News\\\",\\r\\n                                    UrlCategory =~ 'IW_docs', \\\"Online Document Sharing and Collaboration\\\",\\r\\n                                    UrlCategory =~ 'IW_meet', \\\"Online Meetings\\\",\\r\\n                                    \\\"Other\\\")\\r\\n| top 8 by ['URL Category'] desc\\r\\n\",\"size\":3,\"title\":\"Top URL Categories\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"URL Category\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"purple\"}},\"showBorder\":false}},\"customWidth\":\"35\",\"name\":\"query - 0\",\"styleSettings\":{\"maxWidth\":\"30\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoWSAEvent\\n| where isnotempty(DstDvcHostname)\\n| summarize count() by DstDvcHostname\\n| top 10 by DstDvcHostname\\n| order by count_\\n| project-rename Domain = DstDvcHostname, ['Total Events'] = count_\",\"size\":0,\"title\":\"Top visited domains\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"User\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"TotalMailsReceived\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"magenta\"}},\"showBorder\":false}},\"customWidth\":\"30\",\"name\":\"query - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoWSAEvent\\r\\n| where isnotempty(SrcUserName)\\r\\n| summarize TotalBytes = sum(DstBytes) by SrcUserName\\r\\n| top 10 by TotalBytes\\r\\n| project User=SrcUserName, ['Total Bytes (KB)'] = TotalBytes/1000\",\"size\":3,\"title\":\"Top Users\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total Bytes (KB)\",\"formatter\":8,\"formatOptions\":{\"palette\":\"greenRed\"}}]}},\"customWidth\":\"33\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoWSAEvent\\n| where isnotempty(ThreatName)\\n| summarize count() by ThreatName\",\"size\":3,\"title\":\"Discovered Threats\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"30\",\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoWSAEvent\\r\\n| where isnotempty(AmpFileName)\\r\\n| project TimeGenerated, SrcUserName, AmpFileName, Result=strcat(iff(isnotempty(AmpScanningVerdict) or AmpScanningVerdict !has 'clean', '❌ - Infected', '✅ - Clean'))\\r\\n\",\"size\":1,\"title\":\"Latest scanned files\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"filter\":true}},\"customWidth\":\"34\",\"name\":\"query - 1\"}],\"fromTemplateId\":\"sentinel-CiscoWSAWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when users attempting to access sites from high risk category.",
        "displayName": "Cisco WSA - Access to unwanted site",
        "enabled": false,
        "query": "let risky_sites = dynamic(['IW_adlt', 'IW_hack', 'IW_porn']);\nCiscoWSAEvent\n| where UrlCategory in~ (risky_sites)\n| where DvcAction =~ 'DEFAULT_CASE'\n| extend AccountCustomEntity = SrcUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects unexpected file uploads.",
        "displayName": "Cisco WSA - Unexpected uploads",
        "enabled": false,
        "query": "let f_cnt_upload_threshold = 5;\nlet f_upload_size_threshold = 5000000;\nCiscoWSAEvent\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| where isnotempty(AmpFileName)\n| where UrlCategory in~ ('IW_fts', 'IW_osb')\n| where DstBytes > f_upload_size_threshold\n| summarize count() by AmpFileName, SrcUserName, bin(TimeGenerated, 10m)\n| where count_ >= f_cnt_upload_threshold\n| extend AccountCustomEntity = SrcUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Exfiltration"
        ],
        "entityMappings": [
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects multiple connection errors to resource from risky category.",
        "displayName": "Cisco WSA - Multiple errors to resource from risky category",
        "enabled": false,
        "query": "let threshold = 10;\nlet risky_sites = dynamic(['IW_adlt', 'IW_hack', 'IW_porn']);\nCiscoWSAEvent\n| where DvcAction startswith 'BLOCK_'\n| where UrlCategory in~ (risky_sites)\n| summarize count() by SrcUserName, UrlOriginal, bin(TimeGenerated, 5m)\n| where count_ >= threshold\n| extend URLCustomEntity = UrlOriginal, AccountCustomEntity = SrcUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess",
          "CommandAndControl"
        ],
        "entityMappings": [
          {
            "entityType": "URL",
            "fieldMappings": [
              {
                "identifier": "Url",
                "columnName": "URLCustomEntity"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects multiple connection errors to URL.",
        "displayName": "Cisco WSA - Multiple errors to URL",
        "enabled": false,
        "query": "let threshold = 5;\nCiscoWSAEvent\n| where DvcAction =~ 'NONE'\n| summarize count() by SrcUserName, UrlOriginal, bin(TimeGenerated, 5m)\n| where count_ >= threshold\n| extend URLCustomEntity = UrlOriginal, AccountCustomEntity = SrcUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CommandAndControl"
        ],
        "entityMappings": [
          {
            "entityType": "URL",
            "fieldMappings": [
              {
                "identifier": "Url",
                "columnName": "URLCustomEntity"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic5-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects multiple infected files on same source.",
        "displayName": "Cisco WSA - Multiple infected files",
        "enabled": false,
        "query": "CiscoWSAEvent\n| where isnotempty(AmpFileName)\n| where isnotempty(ThreatName)\n| summarize count() by SrcIpAddr, SrcUserName, bin(TimeGenerated, 15m)\n| where count_ > 1\n| extend IPCustomEntity = SrcIpAddr, AccountCustomEntity = SrcUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic6-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when multiple attempts to download unwanted file occur.",
        "displayName": "Cisco WSA - Multiple attempts to download unwanted file",
        "enabled": false,
        "query": "let threshold = 2;\nCiscoWSAEvent\n| where DvcAction =~ 'BLOCK_ADMIN_FILE_TYPE'\n| summarize i_src = makeset(SrcIpAddr) by UrlOriginal, bin(TimeGenerated, 15m)\n| where array_length(i_src) >= threshold\n| extend IPCustomEntity = i_src, UrlCustomEntity = UrlOriginal\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ]
          },
          {
            "entityType": "URL",
            "fieldMappings": [
              {
                "identifier": "Url",
                "columnName": "UrlCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic7-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects possible protocol abuse.",
        "displayName": "Cisco WSA - Suspected protocol abuse",
        "enabled": false,
        "query": "CiscoWSAEvent\n| where DstPortNumber !in ('80', '443')\n| where NetworkApplicationProtocol in~ ('HTTP', 'HTTPs')\n| extend IPCustomEntity = SrcIpAddr, AccountCustomEntity = SrcUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Exfiltration"
        ],
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic8-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects internet access from public IP.",
        "displayName": "Cisco WSA - Internet access from public IP",
        "enabled": false,
        "query": "let ip_except = dynamic(['127.0.0.2']);    //Add exceptions to this list\nCiscoWSAEvent\n| where ipv4_is_private(SrcIpAddr) == false\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic9-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects unexpected file type.",
        "displayName": "Cisco WSA - Unexpected file type",
        "enabled": false,
        "query": "CiscoWSAEvent\n| where isnotempty(AmpFileName)\n| where isempty(AmpThreatName)\n| where ResponseBodyMimeType =~ 'application/octet-stream'\n| where AmpFileName !endswith '.exe'\n| extend IPCustomEntity = SrcIpAddr, AccountCustomEntity = SrcUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic10-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects unexpected URL.",
        "displayName": "Cisco WSA - Unexpected URL",
        "enabled": false,
        "query": "let threshold = 5;\nCiscoWSAEvent\n| where UrlOriginal matches regex @'\\Ahttp(s)?[:][/][/]\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}'\n| extend URLCustomEntity = UrlOriginal, AccountCustomEntity = SrcUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CommandAndControl"
        ],
        "entityMappings": [
          {
            "entityType": "URL",
            "fieldMappings": [
              {
                "identifier": "Url",
                "columnName": "URLCustomEntity"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic11-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects unscanned downloaded file.",
        "displayName": "Cisco WSA - Unscannable file or scan error",
        "enabled": false,
        "query": "CiscoWSAEvent\n| where isnotempty(AmpFileName)\n| where AmpScanningVerdict in ('2', '3')\n| extend IPCustomEntity = SrcIpAddr, FileCustomEntity = AmpFileName, AccountCustomEntity = SrcUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "entityType": "IP",
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ]
          },
          {
            "entityType": "File",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "FileCustomEntity"
              }
            ]
          },
          {
            "entityType": "Account",
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ]
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[parameters('workspace')]",
      "location": "[parameters('workspace-location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoWSA Hunting Query 1",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco WSA - Blocked files",
            "category": "Hunting Queries",
            "query": "CiscoWSAEvent\n| where TimeGenerated > ago(24h)\n| where DvcAction =~ 'BLOCK_ADMIN_FILE_TYPE'\n| summarize count() by UrlOriginal\n| extend URLCustomEntity = UrlOriginal\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for blocked files."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoWSA Hunting Query 2",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco WSA - Rare aplications",
            "category": "Hunting Queries",
            "query": "CiscoWSAEvent\n| where TimeGenerated > ago(24h)\n| summarize count() by AvcApplicationName, SrcUserName\n| order by count_ asc\n| extend AccountCustomEntity = SrcUserName\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for rare applications."
              },
              {
                "name": "tactics",
                "value": "CommandAndControl,Exfiltration"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoWSA Hunting Query 3",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco WSA - Top aplications",
            "category": "Hunting Queries",
            "query": "CiscoWSAEvent\n| where TimeGenerated > ago(24h)\n| summarize count() by AvcApplicationName, SrcUserName\n| extend AccountCustomEntity = SrcUserName\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for top applications."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoWSA Hunting Query 4",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco WSA - Top URLs",
            "category": "Hunting Queries",
            "query": "CiscoWSAEvent\n| where TimeGenerated > ago(24h)\n| summarize count() by UrlOriginal, SrcUserName\n| extend URLCustomEntity = UrlOriginal, AccountCustomEntity = SrcUserName\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for top URLs."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoWSA Hunting Query 5",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco WSA - Uncategorized URLs",
            "category": "Hunting Queries",
            "query": "CiscoWSAEvent\n| where TimeGenerated > ago(24h)\n| where UrlCategory in~ ('IW_nc', 'IW_nact')\n| project UrlOriginal, SrcUserName, SrcIpAddr\n| extend URLCustomEntity = UrlOriginal, AccountCustomEntity = SrcUserName, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for uncategorized URLs."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoWSA Hunting Query 6",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco WSA - Uploaded files",
            "category": "Hunting Queries",
            "query": "CiscoWSAEvent\n| where TimeGenerated > ago(24h)\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| where isnotempty(AmpFileName)\n| project AmpFileName, SrcUserName\n| extend AccountCustomEntity = SrcUserName\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for uploaded files."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoWSA Hunting Query 7",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco WSA - Rare URL with error",
            "category": "Hunting Queries",
            "query": "CiscoWSAEvent\n| where TimeGenerated > ago(24h)\n| where DvcAction =~ 'OTHER'\n| summarize count() by UrlOriginal\n| order by count_ asc\n| extend URLCustomEntity = UrlOriginal\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for rare URLs with errors."
              },
              {
                "name": "tactics",
                "value": "InitialAccess,CommandAndControl"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoWSA Hunting Query 8",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco WSA - URL shorteners",
            "category": "Hunting Queries",
            "query": "CiscoWSAEvent\n| where TimeGenerated > ago(24h)\n| where UrlCategory =~ 'IW_shrt'\n| project UrlOriginal, SrcUserName, SrcIpAddr\n| extend URLCustomEntity = UrlOriginal, AccountCustomEntity = SrcUserName, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches connections to Url shorteners resources."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoWSA Hunting Query 9",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco WSA - Potentially risky resources",
            "category": "Hunting Queries",
            "query": "CiscoWSAEvent\n| where TimeGenerated > ago(24h)\n| where DvcAction =~ 'BLOCK_CONTINUE_WEBCAT'\n| project UrlOriginal, SrcUserName, SrcIpAddr\n| extend URLCustomEntity = UrlOriginal, AccountCustomEntity = SrcUserName, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for potentially risky resources."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoWSA Hunting Query 10",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco WSA - User errors",
            "category": "Hunting Queries",
            "query": "CiscoWSAEvent\n| where TimeGenerated > ago(24h)\n| where DvcAction =~ 'OTHER'\n| summarize count() by UrlOriginal, SrcUserName\n| extend URLCustomEntity = UrlOriginal, AccountCustomEntity = SrcUserName\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for user errors during accessing resource."
              },
              {
                "name": "tactics",
                "value": "InitialAccess,CommandAndControl"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoWSA Data Parser",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "CiscoWSA Data Parser",
            "category": "Samples",
            "functionAlias": "CiscoWSAEvent",
            "query": "\nlet cisco_wsa_access_logs =() {\r\nSyslog\r\n| where ProcessName in (\"cisco_wsa\")\r\n| extend LogType = iff(SyslogMessage matches regex @\"\\A\\d{10}\\.\\d{3}\\s\\d+\\s\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\", \"Squid Logs\" , iif(SyslogMessage matches regex @\"\\A\\d{4}\\-\\d{2}\\-\\d{2}\\s\\d{2}:\\d{2}:\\d{2}\\s\\d{10}\\.\\d{3}\", \"W3C Logs\",dynamic(\"\")))\r\n| extend EventVendor = 'Cisco'\r\n| extend EventProduct = 'Web Security Appliance'\r\n| extend EventType = 'Access Log'\r\n| extend EventFields = split(SyslogMessage, ' ')\r\n| extend ScanningVerdictFields = iif(LogType == \"Squid Logs\", parse_csv(tostring(extract(@'<(.*?)>', 1, SyslogMessage))), dynamic(\"\"))\r\n| extend EventStartTime = case(LogType has \"Squid Logs\", unixtime_seconds_todatetime(todouble(EventFields[0])),\r\n\t\t\t\t\t\t  LogType has \"W3C Logs\", todatetime(strcat(EventFields[0], ' ', EventFields[1])), datetime(null))\r\n| extend Latency = case(LogType has \"Squid Logs\", toint(EventFields[1]),\r\n                   LogType has \"W3C Logs\", toint(EventFields[3]), int(null))\r\n| extend SrcIpAddr = case(LogType has \"Squid Logs\", tostring(EventFields[2]),\r\n\t\t\t\t\t LogType has \"W3C Logs\", tostring(EventFields[5]), \"\")\r\n| extend EventResultDetails = case(LogType has \"Squid Logs\", extract(@'\\A(.*?)\\/[1-5]\\d{2}', 1, tostring(EventFields[3])),\r\n\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[6]), \"\")\r\n| extend HttpStatusCode = iif(LogType == \"Squid Logs\", extract(@'\\A.*?\\/([1-5]\\d{2})', 1, tostring(EventFields[3])), dynamic(\"\"))\r\n| extend DstBytes = case(LogType has \"Squid Logs\", toint(EventFields[4]),\r\n\t\t\t\t\tLogType has \"W3C Logs\", toint(EventFields[8]), int(null))\r\n| extend HttpRequestMethod = case(LogType has \"Squid Logs\", tostring(EventFields[5]),\r\n\t\t\t\t\t\t\t LogType has \"W3C Logs\", tostring(EventFields[9]), \"\")\r\n| extend UrlOriginal = case(LogType has \"Squid Logs\", tostring(EventFields[6]),\r\n\t\t\t\t\t\t\t LogType has \"W3C Logs\", tostring(EventFields[10]), \"\")\r\n| extend SrcUserName = case(LogType has \"Squid Logs\", tostring(EventFields[7]),\r\n\t\t\t\t\t\t\t LogType has \"W3C Logs\", tostring(EventFields[13]), \"\")\r\n| extend ContactedServerCode = iif(LogType == \"Squid Logs\", extract(@'\\A(\\w+)\\/\\d{1,3}', 1, tostring(EventFields[8])), dynamic(\"\"))\r\n| extend DstIpAddr = case(LogType has \"Squid Logs\", extract(@'\\A\\w+\\/(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})', 1, tostring(EventFields[8])),\r\n\t\t\t\t\t LogType has \"W3C Logs\", tostring(EventFields[11]), \"\")\r\n| extend DstDvcHostname = case(LogType has \"Squid Logs\", extract(@'\\A\\w+\\/(\\D+)', 1, tostring(EventFields[8])),\r\n\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[18]), \"\")\r\n| extend ResponseBodyMimeType = case(LogType has \"Squid Logs\", tostring(EventFields[9]),\r\n\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[14]), \"\")\r\n| extend DvcAction = case(LogType has \"Squid Logs\", extract(@'\\A(.*?)\\-', 1, tostring(EventFields[10])),\r\n\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[15]), \"\")\r\n| extend PolicyGroupName = iif(LogType == \"Squid Logs\", extract(@'\\A.*?\\-(.*?)\\-', 1, tostring(EventFields[10])), dynamic(\"\"))\r\n| extend IdentityPolicyGroupName =  iif(LogType == \"Squid Logs\", extract(@'\\A.*?\\-.*?\\-(.*?)\\-', 1, tostring(EventFields[10])), dynamic(\"\"))\r\n| extend OutboundMalwareScanningPolicyGroupName =  iif(LogType == \"Squid Logs\", extract(@'\\A.*?\\-.*?\\-.*?\\-(.*?)\\-', 1, tostring(EventFields[10])), dynamic(\"\"))\r\n| extend DataSecurityPolicyGroupName = iif(LogType == \"Squid Logs\", extract(@'\\A.*?\\-.*?\\-.*?\\-.*?\\-(.*?)\\-', 1, tostring(EventFields[10])), dynamic(\"\"))\r\n| extend ExternalDplPolicyGroupName = iif(LogType == \"Squid Logs\", extract(@'\\A.*?\\-.*?\\-.*?\\-.*?\\-.*?\\-(.*?)\\-', 1, tostring(EventFields[10])), dynamic(\"\"))\r\n| extend RoutingPolicy = iif(LogType == \"Squid Logs\", extract(@'\\A(.*?\\-){6}(.*)', 2, tostring(EventFields[10])), dynamic(\"\"))\r\n| extend SuspectedUserAgent = case(LogType has \"Squid Logs\", tostring(EventFields[-1]),\r\n\t\t\t\t\t\t\t  LogType has \"W3C Logs\", tostring(EventFields[62]), \"\")\r\n| extend UrlCategory = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[0]),\r\n\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[21]), \"\")\r\n| extend WebReputationScore = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[1]), dynamic(\"\"))\r\n| extend MalwareScanningVerdict = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[2]), dynamic(\"\"))\r\n| extend ThreatName = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[3]), dynamic(\"\"))\r\n| extend ThreatRiskRatioValue = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[4]), dynamic(\"\"))\r\n| extend ThreatIdentifier = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[5]), dynamic(\"\"))\r\n| extend TraceIdentifier = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[6]), dynamic(\"\"))\r\n| extend McAfeeMalwareScanningVerdict = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[7]),\r\n\t\t\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[28]), \"\")\r\n| extend McAfeeScannedFileName = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[8]),\r\n\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[29]), \"\")\r\n| extend McAfeeScanError = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[9]),\r\n\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[30]), \"\")\r\n| extend McAfeeDetectionType = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[10]),\r\n\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[31]), \"\")\r\n| extend McAfeeThreatCategory = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[11]),\r\n\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[32]), \"\")\r\n| extend McAfeeThreatName = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[12]),\r\n\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[33]), \"\")\r\n| extend SophosScanningVerdict = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[13]),\r\n\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[34]), \"\")\r\n| extend SophosScanReturnCode = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[14]),\r\n\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[35]), \"\")\r\n| extend SophosScannedFileName = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[15]),\r\n\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[36]), \"\")\r\n| extend SophosThreatName = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[16]),\r\n\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[37]), \"\")\r\n| extend CiscoDataSecurityScanningVerdict = case(LogType has \"Squid Logs\", case(tostring(ScanningVerdictFields[17]) == '0', 'Allow',\r\n                                             tostring(ScanningVerdictFields[17]) == '1', 'Block',\r\n                                             '-'),\r\n\t\t\t\t\t\t\t\t\t\t\t LogType has \"W3C Logs\", tostring(EventFields[38]), \"\")\r\n| extend ExternalDlpScannningVerdict = case(LogType has \"Squid Logs\", case(tostring(ScanningVerdictFields[18]) == '0', 'Allow',\r\n                                       tostring(ScanningVerdictFields[18]) == '1', 'Block',\r\n                                       '-'), LogType has \"W3C Logs\", tostring(EventFields[39]), \"\")\r\n| extend ResponseSideScanningUrlCategoryVerdict = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[19]),\r\n\t\t\t\t\t\t\t\t\t\t\t\t  LogType has \"W3C Logs\", tostring(EventFields[41]), \"\")\r\n| extend DcaUrlCategoryVerdict = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[20]), dynamic(\"\"))\r\n| extend ResponseThreatCategory = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[21]), dynamic(\"\"))\r\n| extend WebReputationThreatType = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[22]), dynamic(\"\"))\r\n| extend GteEncapsulatedUrl = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[23]), dynamic(\"\"))\r\n| extend AvcApplicationName = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[24]),\r\n\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[43]), \"\")\r\n| extend AvcApplicationType = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[25]),\r\n\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[44]), \"\")\r\n| extend AvcApplicationBehavior = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[26]),\r\n\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[45]), \"\")\r\n| extend SafeBrowsingScanningVerdict = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[27]),\r\n\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[46]), \"\")\r\n| extend ['AvgBandwidth(Kb/sec)'] = case(LogType has \"Squid Logs\", todouble(ScanningVerdictFields[28]),\r\n\t\t\t\t\t\t\t\tLogType has \"W3C Logs\", todouble(EventFields[47]), double(null))\r\n| extend Throttled = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[29]),\r\n\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[48]), \"\")\r\n| extend UserType = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[30]),\r\n\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[49]), \"\")\r\n| extend RequestSideAntiMalwareScanningVerdict = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[31]), dynamic(\"\"))\r\n| extend ClientRequestThreatName = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[32]), dynamic(\"\"))\r\n| extend AmpScanningVerdict = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[33]),\r\n\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[56]), \"\")\r\n| extend AmpThreatName = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[34]),\r\n\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[57]), \"\")\r\n| extend AmpReputationScore = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[35]),\r\n\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[58]), \"\")\r\n| extend AmpUploadIndicator = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[36]),\r\n\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[59]), \"\")\r\n| extend AmpFileName = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[37]),\r\n\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[60]), \"\")\r\n| extend AmpFileHashSha256 = case(LogType has \"Squid Logs\", tostring(ScanningVerdictFields[38]),\r\n\t\t\t\t\tLogType has \"W3C Logs\", tostring(EventFields[61]), \"\")\r\n| extend ArchiveScanningVerdict = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[39]), dynamic(\"\"))\r\n| extend ArchiveScanningVerdictDetail = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[40]), dynamic(\"\"))\r\n| extend ArchiveScannerFileVerdict = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[41]), dynamic(\"\"))\r\n| extend WebTapBehavior = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[42]), dynamic(\"\"))\r\n| extend YouTubeUrlCategory = iif(LogType == \"Squid Logs\", tostring(ScanningVerdictFields[43]), dynamic(\"\"))\r\n| extend BlockedFileTypeDetail = iif(LogType == \"Squid Logs\", extract_all(@\"(?P<key>[a-zA-Z0-9- ]+):(?P<value>[a-zA-Z0-9-_:/@.#{};= ]+)\", dynamic([\"key\",\"value\"]), tostring(ScanningVerdictFields[44])), dynamic(\"\"))\r\n| mv-apply BlockedFileTypeDetail on (\r\n    summarize BlockedFileTypeDetail = make_list(pack(tostring(BlockedFileTypeDetail[0]), BlockedFileTypeDetail[1]))\r\n    )\r\n| extend HttpReferrerOriginal = iif(LogType == \"W3C Logs\", tostring(EventFields[4]), dynamic(\"\"))\r\n| extend SrcBytes = iif(LogType == \"W3C Logs\", toint(EventFields[7]), dynamic(null))\r\n| extend RequestUri = iif(LogType == \"W3C Logs\", tostring(EventFields[12]), dynamic(\"\"))\r\n| extend HttpRequestXff = iif(LogType == \"W3C Logs\", tostring(EventFields[16]), dynamic(\"\"))\r\n| extend SrcPortNumber = iif(LogType == \"W3C Logs\", tostring(EventFields[17]), dynamic(\"\"))\r\n| extend DstPortNumber = iif(LogType == \"W3C Logs\", tostring(EventFields[19]), dynamic(\"\"))\r\n| extend NetworkApplicationProtocol = iif(LogType == \"W3C Logs\", tostring(EventFields[20]), dynamic(\"\"))\r\n| extend WbrsScore = iif(LogType == \"W3C Logs\", tostring(EventFields[22]), dynamic(\"\"))\r\n| extend WebrootScanningVerdict = iif(LogType == \"W3C Logs\", tostring(EventFields[23]), dynamic(\"\"))\r\n| extend WebrootThreatName = iif(LogType == \"W3C Logs\", tostring(EventFields[24]), dynamic(\"\"))\r\n| extend WebrootThreatRiskRatio = iif(LogType == \"W3C Logs\", tostring(EventFields[25]), dynamic(\"\"))\r\n| extend WebrootSpyId = iif(LogType == \"W3C Logs\", tostring(EventFields[26]), dynamic(\"\"))\r\n| extend WebrootTraceId = iif(LogType == \"W3C Logs\", tostring(EventFields[27]), dynamic(\"\"))\r\n| extend RequestSideScanningUrlCategoryVerdict = iif(LogType == \"W3C Logs\", tostring(EventFields[40]), dynamic(\"\"))\r\n| extend WebReputationThreatCategory = iif(LogType == \"W3C Logs\", tostring(EventFields[42]), dynamic(\"\"))\r\n| extend ResponseSideThreatName = iif(LogType == \"W3C Logs\", tostring(EventFields[50]), dynamic(\"\"))\r\n| extend ResponseSideThreatCategoryCode = iif(LogType == \"W3C Logs\", tostring(EventFields[51]), dynamic(\"\"))\r\n| extend ResponseSideThreatCategory = iif(LogType == \"W3C Logs\", tostring(EventFields[52]), dynamic(\"\"))\r\n| extend RequestSideDvsThreatName = iif(LogType == \"W3C Logs\", tostring(EventFields[53]), dynamic(\"\"))\r\n| extend RequestSideDvsScanningVerdict = iif(LogType == \"W3C Logs\", tostring(EventFields[54]), dynamic(\"\"))\r\n| extend RequestSideDvsVerdictName = iif(LogType == \"W3C Logs\", tostring(EventFields[55]), dynamic(\"\"))\r\n| extend NetworkBytes = toint(EventFields[63])\r\n};\r\ncisco_wsa_access_logs\r\n| project-away SyslogMessage\r\n             , EventFields\r\n             , ScanningVerdictFields\r\n\t\t\t , LogType\r\n",
            "version": 1
          }
        }
      ]
    },
    {
      "id": "[variables('_connector1-source')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Cisco Web Security Appliance",
          "publisher": "Cisco",
          "descriptionMarkdown": "[Cisco Web Security Appliance (WSA)](https://www.cisco.com/c/en/us/products/security/web-security-appliance/index.html) data connector provides the capability to ingest [Cisco WSA Access Logs](https://www.cisco.com/c/en/us/td/docs/security/wsa/wsa_14-0/User-Guide/b_WSA_UserGuide_14_0/b_WSA_UserGuide_11_7_chapter_010101.html) into Azure Sentinel.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "CiscoWSAEvent",
              "baseQuery": "CiscoWSAEvent"
            }
          ],
          "sampleQueries": [
            {
              "description": "Top 10 Clients (Source IP)",
              "query": "CiscoWSAEvent\n | where notempty(SrcIpAddr)\n | summarize count() by SrcIpAddr\n | top 10 by count_"
            }
          ],
          "dataTypes": [
            {
              "name": "Syslog (CiscoWSAEvent)",
              "lastDataReceivedQuery": "CiscoWSAEvent\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "CiscoWSAEvent\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(3d)"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "write permission is required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected [**CiscoWSAEvent**](https://aka.ms/sentinel-CiscoWSA-parser) which is deployed with the Azure Sentinel Solution."
            },
            {
              "description": ">**NOTE:** This data connector has been developed using AsyncOS 14.0 for Cisco Web Security Appliance"
            },
            {
              "description": "[Follow these steps](https://www.cisco.com/c/en/us/td/docs/security/esa/esa14-0/user_guide/b_ESA_Admin_Guide_14-0/b_ESA_Admin_Guide_12_1_chapter_0100111.html#con_1134718) to configure Cisco Web Security Appliance to forward logs via Syslog\n\n>**NOTE:** Select **Syslog Push** as a Retrieval Method.",
              "title": "1. Configure Cisco Web Security Appliance to forward logs via Syslog to remote server where you will install the agent."
            },
            {
              "description": "Install the agent on the Server to which the logs will be forwarded.\n\n> Logs on Linux or Windows servers are collected by **Linux** or **Windows** agents.",
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the Linux agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Linux Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Linux Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "2. Install and onboard the agent for Linux or Windows"
            },
            {
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the Windows agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Windows Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Windows Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ]
            },
            {
              "description": "Open Log Analytics to check if the logs are received using the Syslog schema.\n\n>**NOTE:** It may take up to 15 minutes before new logs will appear in Syslog table.",
              "title": "3. Check logs in Azure Sentinel"
            }
          ],
          "additionalRequirementBanner": "This data connector depends on a parser based on a Kusto Function to work as expected [**CiscoWSAEvent**](https://aka.ms/sentinel-CiscoWSA-parser) which is deployed with the Azure Sentinel Solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.0.5",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "CiscoWSA",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Sanmit Biraj",
          "email": "v-sabiraj@microsoft.com"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_CiscoWSA_workbook')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoWSAAccessToUnwantedSite_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoWSADataExfiltration_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoWSAMultipleErrorsToUnwantedCategory_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoWSAMultipleErrorsToUrl_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoWSAMultipleInfectedFiles_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoWSAMultipleUnwantedFileTypes_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoWSAProtocolAbuse_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoWSAPublicIPSource_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoWSAUnexpectedFileType_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoWSAUnexpectedUrl_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoWSAUnscannableFile_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoWSABlockedFiles_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoWSARareApplications_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoWSATopApplications_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoWSATopResources_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoWSAUncategorizedResources_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoWSAUploadedFiles_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoWSAUrlRareErrorUrl_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoWSAUrlShortenerLinks_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoWSAUrlSuspiciousResources_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoWSAUrlUsersWithErrors_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_CiscoWSAEvent_Parser')]",
              "version": "1.0.5"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_CiscoWSAConnector')]",
              "version": "1.0.5"
            }
          ]
        },
        "firstPublishDate": "2021-06-29",
        "providers": [
          "Cisco"
        ],
        "categories": {
          "domains": [
            "Security – Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
