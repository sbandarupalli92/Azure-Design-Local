{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Sanmit Biraj - v-sabiraj@microsoft.com",
    "comments": "Solution template for Bitglass"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "formattedTimeNow": {
      "type": "string",
      "defaultValue": "[utcNow('g')]",
      "metadata": {
        "description": "Appended to workbook displayNames to make them unique"
      }
    },
    "workbook1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Bitglass",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "connector1-name": {
      "type": "string",
      "defaultValue": "4074622f-c43a-4219-b5ce-f02be40d715e"
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic4-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic5-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic6-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic7-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic8-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic9-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic10-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    }
  },
  "variables": {
    "Bitglass_workbook": "Bitglass_workbook",
    "_Bitglass_workbook": "[variables('Bitglass_workbook')]",
    "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
    "_workbook-source": "[variables('workbook-source')]",
    "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
    "Bitglass_Parser": "Bitglass_Parser",
    "_Bitglass_Parser": "[variables('Bitglass_Parser')]",
    "BitglassApplications_HuntingQueries": "BitglassApplications_HuntingQueries",
    "_BitglassApplications_HuntingQueries": "[variables('BitglassApplications_HuntingQueries')]",
    "BitglassInsecureWebProtocol_HuntingQueries": "BitglassInsecureWebProtocol_HuntingQueries",
    "_BitglassInsecureWebProtocol_HuntingQueries": "[variables('BitglassInsecureWebProtocol_HuntingQueries')]",
    "BitglassLoginFailures_HuntingQueries": "BitglassLoginFailures_HuntingQueries",
    "_BitglassLoginFailures_HuntingQueries": "[variables('BitglassLoginFailures_HuntingQueries')]",
    "BitglassNewApplications_HuntingQueries": "BitglassNewApplications_HuntingQueries",
    "_BitglassNewApplications_HuntingQueries": "[variables('BitglassNewApplications_HuntingQueries')]",
    "BitglassNewUsers_HuntingQueries": "BitglassNewUsers_HuntingQueries",
    "_BitglassNewUsers_HuntingQueries": "[variables('BitglassNewUsers_HuntingQueries')]",
    "BitglassPrivilegedLoginFailures_HuntingQueries": "BitglassPrivilegedLoginFailures_HuntingQueries",
    "_BitglassPrivilegedLoginFailures_HuntingQueries": "[variables('BitglassPrivilegedLoginFailures_HuntingQueries')]",
    "BitglassRiskyUsers_HuntingQueries": "BitglassRiskyUsers_HuntingQueries",
    "_BitglassRiskyUsers_HuntingQueries": "[variables('BitglassRiskyUsers_HuntingQueries')]",
    "BitglassTopUsersWithBlocks_HuntingQueries": "BitglassTopUsersWithBlocks_HuntingQueries",
    "_BitglassTopUsersWithBlocks_HuntingQueries": "[variables('BitglassTopUsersWithBlocks_HuntingQueries')]",
    "BitglassUncategorizedResources_HuntingQueries": "BitglassUncategorizedResources_HuntingQueries",
    "_BitglassUncategorizedResources_HuntingQueries": "[variables('BitglassUncategorizedResources_HuntingQueries')]",
    "BitglassUserDevices_HuntingQueries": "BitglassUserDevices_HuntingQueries",
    "_BitglassUserDevices_HuntingQueries": "[variables('BitglassUserDevices_HuntingQueries')]",
    "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
    "_connector1-source": "[variables('connector1-source')]",
    "BitglassConnector": "BitglassConnector",
    "_BitglassConnector": "[variables('BitglassConnector')]",
    "BitglassFilesSharedWithExternal_AnalyticalRules": "BitglassFilesSharedWithExternal_AnalyticalRules",
    "_BitglassFilesSharedWithExternal_AnalyticalRules": "[variables('BitglassFilesSharedWithExternal_AnalyticalRules')]",
    "BitglassImpossibleTravelDistance_AnalyticalRules": "BitglassImpossibleTravelDistance_AnalyticalRules",
    "_BitglassImpossibleTravelDistance_AnalyticalRules": "[variables('BitglassImpossibleTravelDistance_AnalyticalRules')]",
    "BitglassMultipleFailedLogins_AnalyticalRules": "BitglassMultipleFailedLogins_AnalyticalRules",
    "_BitglassMultipleFailedLogins_AnalyticalRules": "[variables('BitglassMultipleFailedLogins_AnalyticalRules')]",
    "BitglassNewAdminUser_AnalyticalRules": "BitglassNewAdminUser_AnalyticalRules",
    "_BitglassNewAdminUser_AnalyticalRules": "[variables('BitglassNewAdminUser_AnalyticalRules')]",
    "BitglassNewDevice_AnalyticalRules": "BitglassNewDevice_AnalyticalRules",
    "_BitglassNewDevice_AnalyticalRules": "[variables('BitglassNewDevice_AnalyticalRules')]",
    "BitglassNewRiskyUser_AnalyticalRules": "BitglassNewRiskyUser_AnalyticalRules",
    "_BitglassNewRiskyUser_AnalyticalRules": "[variables('BitglassNewRiskyUser_AnalyticalRules')]",
    "BitglassSmartEdgeAgentUninstall_AnalyticalRules": "BitglassSmartEdgeAgentUninstall_AnalyticalRules",
    "_BitglassSmartEdgeAgentUninstall_AnalyticalRules": "[variables('BitglassSmartEdgeAgentUninstall_AnalyticalRules')]",
    "BitglassSuspiciousFileUpload_AnalyticalRules": "BitglassSuspiciousFileUpload_AnalyticalRules",
    "_BitglassSuspiciousFileUpload_AnalyticalRules": "[variables('BitglassSuspiciousFileUpload_AnalyticalRules')]",
    "BitglassUserLoginNewGeoLocation_AnalyticalRules": "BitglassUserLoginNewGeoLocation_AnalyticalRules",
    "_BitglassUserLoginNewGeoLocation_AnalyticalRules": "[variables('BitglassUserLoginNewGeoLocation_AnalyticalRules')]",
    "BitglassUserUAChanged_AnalyticalRules": "BitglassUserUAChanged_AnalyticalRules",
    "_BitglassUserUAChanged_AnalyticalRules": "[variables('BitglassUserUAChanged_AnalyticalRules')]",
    "sourceId": "azuresentinel.azure-sentinel-solution-bitglass",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook1-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2020-02-12",
      "properties": {
        "displayName": "[concat(parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"**NOTE**: This data connector depends on a parser based on Kusto Function **Bitglass** to work as expected. [Follow steps to get this Kusto Function](https://aka.ms/sentinel-bitglass-parser)\"},\"name\":\"text - 8\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"cd8447d9-b096-4673-92d8-2a1e8291a125\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"description\":\"Sets the time name for analysis\",\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":86400000},{\"durationMs\":604800000},{\"durationMs\":2592000000},{\"durationMs\":7776000000}]},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Bitglass\\r\\n| make-series TotalEvents = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain};\",\"size\":0,\"title\":\"Events Over Time\",\"color\":\"green\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"graphSettings\":{\"type\":0}},\"customWidth\":\"60\",\"name\":\"query - 12\",\"styleSettings\":{\"maxWidth\":\"55\"}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Statistics\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Bitglass\\r\\n| where isnotempty(SrcIpAddr)\\r\\n| summarize dcount(SrcIpAddr)\",\"size\":3,\"title\":\"IP Addresses\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"50\",\"name\":\"query - 3\",\"styleSettings\":{\"margin\":\"10\",\"padding\":\"10\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Bitglass\\n| where isnotempty(User)\\n| summarize dcount(User)\",\"size\":3,\"title\":\"Users\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Bitglass\\n| where isnotempty(TransactionId)\\n| summarize dcount(TransactionId)\",\"size\":3,\"title\":\"Transactions\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"50\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Bitglass\\n| where Action has 'block'\\n| summarize count()\",\"size\":3,\"title\":\"Transactions Blocked\",\"noDataMessage\":\"0\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"50\",\"name\":\"query - 3\"}]},\"customWidth\":\"40\",\"name\":\"group - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Bitglass\\r\\n| where EventType =~ 'swgweb'\\r\\n| where isnotempty(WebCategories)\\r\\n| extend cat = extract(@'WR:(.*?)\\\"\\\\]', 1, WebCategories)\\r\\n| summarize count() by cat\\r\\n| top 10 by count_\",\"size\":3,\"title\":\"Top URL Categories\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"cat\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"purple\"}},\"showBorder\":false}},\"customWidth\":\"35\",\"name\":\"query - 0\",\"styleSettings\":{\"maxWidth\":\"30\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Bitglass\\n| where isnotempty(Dvc)\\n| summarize count() by Dvc\",\"size\":3,\"title\":\"User devices\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"35\",\"name\":\"query - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Bitglass\\n| where isnotempty(SrcIpAddr)\\n| summarize count() by SrcIpAddr\",\"size\":3,\"title\":\"Source Addresses\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"30\",\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Bitglass\\n| where isnotempty(DstDomain)\\n| summarize count() by DstDomain\\n| top 50 by count_\",\"size\":0,\"title\":\"Top visited domains\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"User\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"TotalMailsReceived\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"magenta\"}},\"showBorder\":false}},\"customWidth\":\"40\",\"name\":\"query - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Bitglass\\r\\n| where isnotempty(Email)\\r\\n| summarize TrafficVolume = sum(tolong(NetworkBytes)) by Email\\r\\n| join kind = inner (Bitglass\\r\\n | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Email)\\r\\n on Email\\r\\n| where TrafficVolume > 0\\r\\n| project-away Email1, TimeGenerated\\r\\n| project User=Email, ['TrafficVolume(MB)'] = TrafficVolume/1000000, Trend\\r\\n| order by ['TrafficVolume(MB)']\",\"size\":3,\"title\":\"Internet usage\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Total Bytes (KB)\",\"formatter\":8,\"formatOptions\":{\"palette\":\"greenRed\"}}]},\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"User\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"TrafficVolume(MB)\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":21,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false}},\"customWidth\":\"55\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Bitglass\\r\\n| where EventType =~ 'swgwebdlp'\\r\\n| project TimeGenerated, User=Email, DlpPattern, DstDomain, SrcFileExtension\\r\\n\",\"size\":0,\"title\":\"DLP Pattern hits\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"filter\":true}},\"name\":\"query - 1\"}],\"fromTemplateId\":\"sentinel-BitglassWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[parameters('workspace')]",
      "location": "[parameters('workspace-location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Bitglass Data Parser",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Bitglass Data Parser",
            "category": "Samples",
            "functionAlias": "Bitglass",
            "query": "\nlet Bitglass_view  = view () { \r\n    BitglassLogs_CL\r\n    | extend \r\n                EventVendor=\"Bitglass\",\r\n                SrcFileExtension=column_ifexists('docextension_s', ''),\r\n                DocType=column_ifexists('doctype_s', ''),\r\n                SrcFileSHA256=column_ifexists('docsha256_s', ''),\r\n                SrcFileSHA1=column_ifexists('docsha1_s', ''),\r\n                PolicyId=column_ifexists('policyid_s', ''),\r\n                ThreatId=column_ifexists('threatindicator_s', ''),\r\n                SrcFileMD5=column_ifexists('docmd5_s', ''),\r\n                Keyword=column_ifexists('keyword_s', ''),\r\n                HttpStatusCode=column_ifexists('responsecode_d', ''),\r\n                DvcId=column_ifexists('deviceguid_s', ''),\r\n                Owner=column_ifexists('owner_s', ''),\r\n                EventResult=column_ifexists('status_s', ''),\r\n                SrcFilePath=column_ifexists('folder_s', ''),\r\n                FileId= column_ifexists('fileid_g', column_ifexists('fileid_s', '')),\r\n                FileLink=column_ifexists('filelink_s', ''),\r\n                SharedWith=column_ifexists('sharedwith_s', ''),\r\n                User=column_ifexists('user_s', ''),\r\n                Dvc=column_ifexists('device_s', ''),\r\n                Application=column_ifexists('application_s', ''),\r\n                SrcGeoLocation=column_ifexists('location_s', ''),\r\n                EventMessage=column_ifexists('activity_s', ''),\r\n                HttpRequest=column_ifexists('request_s', ''),\r\n                TransactionId=column_ifexists('transactionid_s', ''),\r\n                EmailFrom=column_ifexists('emailfrom_s', ''),\r\n                EmailTo=column_ifexists('emailto_s', ''),\r\n                EmailSubject=column_ifexists('emailsubject_s', ''),\r\n                EmailCc=column_ifexists('emailcc_s', ''),\r\n                EmailBcc=column_ifexists('emailbcc_s', ''),\r\n                EmailSentTime=column_ifexists('emailsenttime_s', todatetime(emailsenttime_s)),\r\n                SrcFileName=column_ifexists('filename_s', ''),\r\n                DlpPattern=column_ifexists('dlppattern_s', ''),\r\n                PageTitle=column_ifexists('pagetitle_s', ''),\r\n                Url=column_ifexists('url_s', ''),\r\n                EventResultDetails=column_ifexists('details_s', ''),\r\n                SyslogHeader=column_ifexists('syslogheader_s', ''),\r\n                NetworkProtocol=column_ifexists('protocol_s', ''),\r\n                CustomLocation=column_ifexists('customlocation_s', ''),\r\n                HttpRequestMethod=column_ifexists('requestmethod_s', ''),\r\n                UserGroup=column_ifexists('usergroup_s', ''),\r\n                BgCategories=column_ifexists('bgcategories_s', ''),\r\n                NetworkBytes=column_ifexists('size_s', ''),\r\n                City=column_ifexists('city_s', ''),\r\n                DvcGuid=column_ifexists('deviceguid_g', ''),\r\n                DstIpAddr=column_ifexists('destinationip_s', ''),\r\n                SrcIpAddr=column_ifexists('IPAddress', ''),\r\n                Webreputation=column_ifexists('webreputation_s', ''),\r\n                SrcGeoLongitude=column_ifexists('long_s', ''),\r\n                DstDomain=column_ifexists('requestdomain_s', ''),\r\n                SeTransactionid=column_ifexists('setransactionid_g', ''),\r\n                Arguments=column_ifexists('arguments_s', ''),\r\n                IndexedTime=todatetime(indexedtime_s),\r\n                Email=column_ifexists('email_s', ''),\r\n                BgCloudScore=column_ifexists('bgcloudscore_s', ''),\r\n                FirstName=column_ifexists('firstname_s', ''),\r\n                LastName=column_ifexists('lastname_s', ''),\r\n                DvcHostname=column_ifexists('devicehostname_s', ''),\r\n                SrcGeoRegionCode=column_ifexists('regioncode_s', ''),\r\n                SrcGeoLatitude=column_ifexists('lat_s', ''),\r\n                SrcBytes=column_ifexists('uploadedbytes_s', ''),\r\n                WebCategories=column_ifexists('webcategories_s', ''),\r\n                SrcGeoCountryCode=column_ifexists('countrycode_s', ''),\r\n                HttpReferrer=column_ifexists('referrer_s', ''),\r\n                SrcGeoCountry=column_ifexists('country_s', ''),\r\n                SrcGeoRegion=column_ifexists('region_s', ''),\r\n                Uri=column_ifexists('uri_s', ''),\r\n                CustomCategories=column_ifexists('customcategories_s', ''),\r\n                EventEndTime=todatetime(time_s),\r\n                Action=column_ifexists('action_s', ''),\r\n                HttpUserAgent=column_ifexists('useragent_s', ''),\r\n                WebCategoryClass=column_ifexists('webcategoryclass_s', ''),\r\n                EventType=column_ifexists('log_type_s', '')           \r\n    | project\r\n                TimeGenerated, \r\n                EventVendor,\r\n                SrcFileExtension,\r\n                DocType,\r\n                SrcFileSHA256,\r\n                SrcFileSHA1,\r\n                PolicyId,\r\n                ThreatId,\r\n                SrcFileMD5,\r\n                Keyword,\r\n                HttpStatusCode,\r\n                DvcId,\r\n                Owner,\r\n                EventResult,\r\n                SrcFilePath,\r\n                FileId,\r\n                FileLink,\r\n                SharedWith,\r\n                User,\r\n                Dvc,\r\n                Application,\r\n                SrcGeoLocation,\r\n                EventMessage,\r\n                HttpRequest,\r\n                TransactionId,\r\n                EmailFrom,\r\n                EmailTo,\r\n                EmailSubject,\r\n                EmailCc,\r\n                EmailBcc,\r\n                EmailSentTime,\r\n                SrcFileName,\r\n                DlpPattern,\r\n                PageTitle,\r\n                Url,\r\n                EventResultDetails,\r\n                SyslogHeader,\r\n                NetworkProtocol,\r\n                CustomLocation,\r\n                HttpRequestMethod,\r\n                UserGroup,\r\n                BgCategories,\r\n                NetworkBytes,\r\n                City,\r\n                DvcGuid,\r\n                DstIpAddr,\r\n                SrcIpAddr,\r\n                Webreputation,\r\n                SrcGeoLongitude,\r\n                DstDomain,\r\n                SeTransactionid,\r\n                Arguments,\r\n                IndexedTime,\r\n                Email,\r\n                BgCloudScore,\r\n                FirstName,\r\n                LastName,\r\n                DvcHostname,\r\n                SrcGeoRegionCode,\r\n                SrcGeoLatitude,\r\n                SrcBytes,\r\n                WebCategories,\r\n                SrcGeoCountryCode,\r\n                HttpReferrer,\r\n                SrcGeoCountry,\r\n                SrcGeoRegion,\r\n                Uri,\r\n                CustomCategories,\r\n                EventEndTime,\r\n                Action,\r\n                HttpUserAgent,\r\n                WebCategoryClass,\r\n                EventType      \r\n};\r\nBitglass_view",
            "version": 1
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Bitglass Hunting Query 1",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Bitglass - Applications used",
            "category": "Hunting Queries",
            "query": "Bitglass\n| where TimeGenerated > ago(24h)\n| where isnotempty(Application)\n| summarize count() by Application\n| extend AppCustomEntity = Application\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for applications used."
              },
              {
                "name": "tactics",
                "value": "Exfiltration"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Bitglass Hunting Query 2",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Bitglass - Insecure web protocol",
            "category": "Hunting Queries",
            "query": "Bitglass\n| where TimeGenerated > ago(24h)\n| where EventType in~ ('swgweb', 'swgwebdlp')\n| where NetworkProtocol =~ 'http'\n| extend AccountCustomEntity = User, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for usage of http protocol."
              },
              {
                "name": "tactics",
                "value": "Exfiltration"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Bitglass Hunting Query 3",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Bitglass - Login failures",
            "category": "Hunting Queries",
            "query": "Bitglass\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'access'\n| where EventResultDetails =~ 'Failed login attempt.'\n| order by TimeGenerated\n| extend AccountCustomEntity = User, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for login failures."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Bitglass Hunting Query 4",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Bitglass - New applications",
            "category": "Hunting Queries",
            "query": "Bitglass\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'admin'\n| where EventResultDetails has_all ('Application', 'added')\n| extend n_app = extract(@'Application\\s(.*?)\\sadded', 1, EventResultDetails)\n| extend AppCustomEntity = n_app\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for new applications configured."
              },
              {
                "name": "tactics",
                "value": "Exfiltration"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Bitglass Hunting Query 5",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Bitglass - New users",
            "category": "Hunting Queries",
            "query": "let u_list = Bitglass\n| where TimeGenerated between(ago(30d) .. ago(1d))\n| where EventType =~ 'access'\n| where EventMessage =~ 'Login'\n| summarize l_usr = makeset(User)\n| extend k = 1;\nBitglass\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'access'\n| where EventMessage =~ 'Login'\n| extend k = 1\n| join (u_list) on k\n| where l_usr !contains User\n| extend AccountCustomEntity = User\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for new users."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Bitglass Hunting Query 6",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Bitglass - Privileged login failures",
            "category": "Hunting Queries",
            "query": "Bitglass\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'admin'\n| where EventResultDetails =~ 'Error attempting to login to Bitglass'\n| order by TimeGenerated\n| extend AccountCustomEntity = User, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for privileged login failures."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Bitglass Hunting Query 7",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Bitglass - Risky users",
            "category": "Hunting Queries",
            "query": "Bitglass\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'access'\n| where EventResultDetails has_all ('Added', 'Risky Users')\n| extend AccountCustomEntity = User\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for risky users."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Bitglass Hunting Query 8",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Bitglass - Risky users",
            "category": "Hunting Queries",
            "query": "Bitglass\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'swgweb'\n| where Action =~ 'block'\n| summarize count() by User\n| extend AccountCustomEntity = User\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for risky users."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Bitglass Hunting Query 9",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Bitglass - Uncategorized resources",
            "category": "Hunting Queries",
            "query": "Bitglass\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'swgweb'\n| where WebCategories contains 'Uncategorized'\n| where Action =~ 'allow'\n| extend AccountCustomEntity = User\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for uncategorized resources."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Bitglass Hunting Query 10",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Bitglass - User devices",
            "category": "Hunting Queries",
            "query": "Bitglass\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'access'\n| where isnotempty(Dvc)\n| summarize makeset(Dvc) by User\n| extend AccountCustomEntity = User\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for user devices."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        }
      ]
    },
    {
      "id": "[variables('_connector1-source')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Bitglass",
          "publisher": "Bitglass",
          "descriptionMarkdown": "The [Bitglass](https://www.bitglass.com/) data connector provides the capability to retrieve security event logs of the Bitglass services and more events into Azure Sentinel through the REST API. The connector provides ability to get events which helps to examine potential security risks, analyze your team's use of collaboration, diagnose configuration problems and more.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "BitglassLogs_CL",
              "baseQuery": "BitglassLogs_CL"
            }
          ],
          "sampleQueries": [
            {
              "description": "Bitglass Events - All Activities.",
              "query": "BitglassLogs_CL\n | sort by TimeGenerated desc"
            }
          ],
          "dataTypes": [
            {
              "name": "BitglassLogs_CL",
              "lastDataReceivedQuery": "BitglassLogs_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "BitglassLogs_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "REST API Credentials/permissions",
                "description": "**BitglassToken** and **BitglassServiceURL** are required for making API calls."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to the Azure Blob Storage API to pull logs into Azure Sentinel. This might result in additional costs for data ingestion and for storing data in Azure Blob Storage costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) and [Azure Blob Storage pricing page](https://azure.microsoft.com/pricing/details/storage/blobs/) for details."
            },
            {
              "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
            },
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected [**Bitglass**](https://aka.ms/sentinel-bitglass-parser) which is deployed with the Azure Sentinel Solution."
            },
            {
              "description": "**STEP 1 - Configuration steps for the Bitglass Log Retrieval API**\n\n Follow the instructions to obtain the credentials.\n\n1. Please contact Bitglass [support](https://pages.bitglass.com/Contact.html) and obtain the **BitglassToken** and **BitglassServiceURL** ntation].\n2. Save credentials for using in the data connector."
            },
            {
              "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the Bitglass data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following).",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            },
            {
              "description": "Use this method for automated deployment of the Bitglass data connector using an ARM Template.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-bitglass-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n> **NOTE:** Within the same resource group, you can't mix Windows and Linux apps in the same region. Select existing resource group without Windows apps in it or create new resource group.\n3. Enter the **BitglassToken**, **BitglassServiceURL**  and deploy. \n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**. \n5. Click **Purchase** to deploy.",
              "title": "Option 1 - Azure Resource Manager (ARM) Template"
            },
            {
              "description": "Use the following step-by-step instructions to deploy the Bitglass data connector manually with Azure Functions (Deployment via Visual Studio Code).",
              "title": "Option 2 - Manual Deployment of Azure Functions"
            },
            {
              "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-bitglass-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. BitglassXXXXX).\n\n\te. **Select a runtime:** Choose Python 3.8.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Azure Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
            },
            {
              "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select ** New application setting**.\n3. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tBitglassToken\n\t\tBitglassServiceURL\n\t\tWorkspaceID\n\t\tWorkspaceKey\n\t\tlogAnalyticsUri (optional)\n> - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<CustomerId>.ods.opinsights.azure.us`.\n4. Once all application settings have been entered, click **Save**."
            }
          ],
          "additionalRequirementBanner": ">This data connector depends on a parser based on a Kusto Function to work as expected [**Bitglass**](https://aka.ms/sentinel-bitglass-parser) which is deployed with the Azure Sentinel Solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when multiple files shared with external entity.",
        "displayName": "Bitglass - Multiple files shared with external entity",
        "enabled": false,
        "query": "let threshold = 5;\nBitglass\n| where EventType =~ 'cloudaudit'\n| where Action =~ 'Action  DLPScan'\n| where EventMessage has_all ('External', 'Shared', 'DLP')\n| summarize f_cnt = makeset(SrcFileName) by User, bin(TimeGenerated, 10m)\n| where array_length(f_cnt) >= threshold\n| extend AccountCustomEntity = User\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Exfiltration"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects logins from different geo locations.",
        "displayName": "Bitglass - Impossible travel distance",
        "enabled": false,
        "query": "Bitglass\n| where EventType =~ 'access'\n| where EventResultDetails startswith 'Simultaneous logins from geographically distant locations'\n| extend AccountCustomEntity = User\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects multiple failed logins.",
        "displayName": "Bitglass - Multiple failed logins",
        "enabled": false,
        "query": "let threshold = 10;\nBitglass\n| where EventType =~ 'access'\n| where EventResultDetails =~ 'Failed login attempt.'\n| summarize count() by User, bin(TimeGenerated, 10m)\n| where count_ >= threshold\n| extend AccountCustomEntity = User\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CredentialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects new admin user.",
        "displayName": "Bitglass - New admin user",
        "enabled": false,
        "query": "Bitglass\n| where EventType =~ 'admin'\n| where EventResultDetails has_all ('User', 'Promoted to administrator')\n| extend AccountCustomEntity = User\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "PrivilegeEscalation"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic5-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when a user logins from new device.",
        "displayName": "Bitglass - Login from new device",
        "enabled": false,
        "query": "Bitglass\n| where EventType =~ 'access'\n| where EventMessage =~ 'Login'\n| summarize dev = makeset(Dvc) by User\n| join (Bitglass\n        | where EventType =~ 'access'\n        | where EventMessage =~ 'Login') on User\n| where dev !contains Dvc\n| extend AccountCustomEntity = User\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P14D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic6-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects new risky user.",
        "displayName": "Bitglass - New risky user",
        "enabled": false,
        "query": "Bitglass\n| where EventType =~ 'access'\n| where EventResultDetails has_all ('Added', 'Risky Users')\n| extend AccountCustomEntity = User\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic7-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when SmartEdge endpoint agent was uninstalled.",
        "displayName": "Bitglass - The SmartEdge endpoint agent was uninstalled",
        "enabled": false,
        "query": "Bitglass\n| where EventType =~ 'access'\n| where EventResultDetails startswith 'The SmartEdge endpoint agent was uninstalled'\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "DefenseEvasion"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ],
            "entityType": "IP"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic8-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects suspicious file upload activity.",
        "displayName": "Bitglass - Suspicious file upload",
        "enabled": false,
        "query": "Bitglass\n| where EventType =~ 'swgwebdlp'\n| where HttpRequestMethod =~ 'POST'\n| where isnotempty(DlpPattern)\n| extend AccountCustomEntity = User\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Exfiltration"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic9-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects user login from new geo location.",
        "displayName": "Bitglass - User login from new geo location",
        "enabled": false,
        "query": "Bitglass\n| where EventType =~ 'access'\n| where EventMessage =~ 'Login'\n| summarize g_loc = makeset(SrcGeoLocation) by User\n| join (Bitglass\n        | where EventType =~ 'access'\n        | where EventMessage =~ 'Login') on User\n| where g_loc !contains SrcGeoLocation\n| extend AccountCustomEntity = User, FileCustomEntity = SrcFileName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P14D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "FileCustomEntity"
              }
            ],
            "entityType": "File"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic10-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when User Agent string has changed for user.",
        "displayName": "Bitglass - User Agent string has changed for user",
        "enabled": false,
        "query": "Bitglass\n| where EventType =~ 'access'\n| where EventMessage =~ 'Login'\n| summarize ua = makeset(HttpUserAgent) by User\n| join (Bitglass\n        | where EventType =~ 'access'\n        | where EventMessage =~ 'Login') on User\n| where ua !contains HttpUserAgent\n| extend AccountCustomEntity = User\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P14D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.0.1",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "Bitglass",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Sanmit Biraj",
          "email": "v-sabiraj@microsoft.com"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_Bitglass_workbook')]",
              "version": "1.0.1"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_Bitglass_Parser')]",
              "version": "1.0.1"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_BitglassApplications_HuntingQueries')]",
              "version": "1.0.1"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_BitglassInsecureWebProtocol_HuntingQueries')]",
              "version": "1.0.1"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_BitglassLoginFailures_HuntingQueries')]",
              "version": "1.0.1"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_BitglassNewApplications_HuntingQueries')]",
              "version": "1.0.1"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_BitglassNewUsers_HuntingQueries')]",
              "version": "1.0.1"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_BitglassPrivilegedLoginFailures_HuntingQueries')]",
              "version": "1.0.1"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_BitglassRiskyUsers_HuntingQueries')]",
              "version": "1.0.1"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_BitglassTopUsersWithBlocks_HuntingQueries')]",
              "version": "1.0.1"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_BitglassUncategorizedResources_HuntingQueries')]",
              "version": "1.0.1"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_BitglassUserDevices_HuntingQueries')]",
              "version": "1.0.1"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_BitglassConnector')]",
              "version": "1.0.1"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_BitglassFilesSharedWithExternal_AnalyticalRules')]",
              "version": "1.0.1"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_BitglassImpossibleTravelDistance_AnalyticalRules')]",
              "version": "1.0.1"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_BitglassMultipleFailedLogins_AnalyticalRules')]",
              "version": "1.0.1"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_BitglassNewAdminUser_AnalyticalRules')]",
              "version": "1.0.1"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_BitglassNewDevice_AnalyticalRules')]",
              "version": "1.0.1"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_BitglassNewRiskyUser_AnalyticalRules')]",
              "version": "1.0.1"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_BitglassSmartEdgeAgentUninstall_AnalyticalRules')]",
              "version": "1.0.1"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_BitglassSuspiciousFileUpload_AnalyticalRules')]",
              "version": "1.0.1"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_BitglassUserLoginNewGeoLocation_AnalyticalRules')]",
              "version": "1.0.1"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_BitglassUserUAChanged_AnalyticalRules')]",
              "version": "1.0.1"
            }
          ]
        },
        "firstPublishDate": "2021-10-23",
        "providers": [
          "Bitglass"
        ],
        "categories": {
          "domains": [
            "Security – Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
