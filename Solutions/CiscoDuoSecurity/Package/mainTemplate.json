{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Mallikarjun Udanashiv - v-maudan@microsoft.com",
    "comments": "Solution template for CiscoDuoSecurity"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "formattedTimeNow": {
      "type": "string",
      "defaultValue": "[utcNow('g')]",
      "metadata": {
        "description": "Appended to workbook displayNames to make them unique"
      }
    },
    "workbook1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "CiscoDuoSecurity",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "connector1-name": {
      "type": "string",
      "defaultValue": "b85ab1a9-1067-43f9-9b40-553cefc30ccc"
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic4-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic5-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic6-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic7-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic8-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic9-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic10-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    }
  },
  "variables": {
    "CiscoDuo_workbook": "CiscoDuo_workbook",
    "_CiscoDuo_workbook": "[variables('CiscoDuo_workbook')]",
    "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
    "_workbook-source": "[variables('workbook-source')]",
    "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
    "CiscoDuo_Parser": "CiscoDuo_Parser",
    "_CiscoDuo_Parser": "[variables('CiscoDuo_Parser')]",
    "CiscoDuoAdmin2FAFailure_HuntingQueries": "CiscoDuoAdmin2FAFailure_HuntingQueries",
    "_CiscoDuoAdmin2FAFailure_HuntingQueries": "[variables('CiscoDuoAdmin2FAFailure_HuntingQueries')]",
    "CiscoDuoAdminDeleteActions_HuntingQueries": "CiscoDuoAdminDeleteActions_HuntingQueries",
    "_CiscoDuoAdminDeleteActions_HuntingQueries": "[variables('CiscoDuoAdminDeleteActions_HuntingQueries')]",
    "CiscoDuoAdminFailure_HuntingQueries": "CiscoDuoAdminFailure_HuntingQueries",
    "_CiscoDuoAdminFailure_HuntingQueries": "[variables('CiscoDuoAdminFailure_HuntingQueries')]",
    "CiscoDuoAuthenticationErrorEvents_HuntingQueries": "CiscoDuoAuthenticationErrorEvents_HuntingQueries",
    "_CiscoDuoAuthenticationErrorEvents_HuntingQueries": "[variables('CiscoDuoAuthenticationErrorEvents_HuntingQueries')]",
    "CiscoDuoAuthenticationErrorReasons_HuntingQueries": "CiscoDuoAuthenticationErrorReasons_HuntingQueries",
    "_CiscoDuoAuthenticationErrorReasons_HuntingQueries": "[variables('CiscoDuoAuthenticationErrorReasons_HuntingQueries')]",
    "CiscoDuoDeletedUsers_HuntingQueries": "CiscoDuoDeletedUsers_HuntingQueries",
    "_CiscoDuoDeletedUsers_HuntingQueries": "[variables('CiscoDuoDeletedUsers_HuntingQueries')]",
    "CiscoDuoFraudAuthentication_HuntingQueries": "CiscoDuoFraudAuthentication_HuntingQueries",
    "_CiscoDuoFraudAuthentication_HuntingQueries": "[variables('CiscoDuoFraudAuthentication_HuntingQueries')]",
    "CiscoDuoNewUsers_HuntingQueries": "CiscoDuoNewUsers_HuntingQueries",
    "_CiscoDuoNewUsers_HuntingQueries": "[variables('CiscoDuoNewUsers_HuntingQueries')]",
    "CiscoDuoUnpachedAccessDevices_HuntingQueries": "CiscoDuoUnpachedAccessDevices_HuntingQueries",
    "_CiscoDuoUnpachedAccessDevices_HuntingQueries": "[variables('CiscoDuoUnpachedAccessDevices_HuntingQueries')]",
    "CiscoDuoUnsecuredDevices_HuntingQueries": "CiscoDuoUnsecuredDevices_HuntingQueries",
    "_CiscoDuoUnsecuredDevices_HuntingQueries": "[variables('CiscoDuoUnsecuredDevices_HuntingQueries')]",
    "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
    "_connector1-source": "[variables('connector1-source')]",
    "CiscoDuoSecurityConnector": "CiscoDuoSecurityConnector",
    "_CiscoDuoSecurityConnector": "[variables('CiscoDuoSecurityConnector')]",
    "CiscoDuoADSyncFailed_AnalyticalRules": "CiscoDuoADSyncFailed_AnalyticalRules",
    "_CiscoDuoADSyncFailed_AnalyticalRules": "[variables('CiscoDuoADSyncFailed_AnalyticalRules')]",
    "CiscoDuoAdminDeleted_AnalyticalRules": "CiscoDuoAdminDeleted_AnalyticalRules",
    "_CiscoDuoAdminDeleted_AnalyticalRules": "[variables('CiscoDuoAdminDeleted_AnalyticalRules')]",
    "CiscoDuoAdminMFAFailures_AnalyticalRules": "CiscoDuoAdminMFAFailures_AnalyticalRules",
    "_CiscoDuoAdminMFAFailures_AnalyticalRules": "[variables('CiscoDuoAdminMFAFailures_AnalyticalRules')]",
    "CiscoDuoAdminPasswordReset_AnalyticalRules": "CiscoDuoAdminPasswordReset_AnalyticalRules",
    "_CiscoDuoAdminPasswordReset_AnalyticalRules": "[variables('CiscoDuoAdminPasswordReset_AnalyticalRules')]",
    "CiscoDuoMultipleUserLoginFailures_AnalyticalRules": "CiscoDuoMultipleUserLoginFailures_AnalyticalRules",
    "_CiscoDuoMultipleUserLoginFailures_AnalyticalRules": "[variables('CiscoDuoMultipleUserLoginFailures_AnalyticalRules')]",
    "CiscoDuoMultipleUsersDeleted_AnalyticalRules": "CiscoDuoMultipleUsersDeleted_AnalyticalRules",
    "_CiscoDuoMultipleUsersDeleted_AnalyticalRules": "[variables('CiscoDuoMultipleUsersDeleted_AnalyticalRules')]",
    "CiscoDuoNewAccessDevice_AnalyticalRules": "CiscoDuoNewAccessDevice_AnalyticalRules",
    "_CiscoDuoNewAccessDevice_AnalyticalRules": "[variables('CiscoDuoNewAccessDevice_AnalyticalRules')]",
    "CiscoDuoNewAdmin_AnalyticalRules": "CiscoDuoNewAdmin_AnalyticalRules",
    "_CiscoDuoNewAdmin_AnalyticalRules": "[variables('CiscoDuoNewAdmin_AnalyticalRules')]",
    "CiscoDuoNewAuthDeviceLocation_AnalyticalRules": "CiscoDuoNewAuthDeviceLocation_AnalyticalRules",
    "_CiscoDuoNewAuthDeviceLocation_AnalyticalRules": "[variables('CiscoDuoNewAuthDeviceLocation_AnalyticalRules')]",
    "CiscoDuoUnexpectedAuthFactor_AnalyticalRules": "CiscoDuoUnexpectedAuthFactor_AnalyticalRules",
    "_CiscoDuoUnexpectedAuthFactor_AnalyticalRules": "[variables('CiscoDuoUnexpectedAuthFactor_AnalyticalRules')]",
    "sourceId": "azuresentinel.azure-sentinel-solution-ciscoduosecurity",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook1-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2020-02-12",
      "properties": {
        "displayName": "[concat(parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"**NOTE**: This data connector depends on a parser based on Kusto Function **CiscoDuo** to work as expected. [Follow steps to get this Kusto Function](https://aka.ms/sentinel-ciscoduo-parser)\"},\"name\":\"text - 8\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"cd8447d9-b096-4673-92d8-2a1e8291a125\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"description\":\"Sets the time name for analysis\",\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":900000},{\"durationMs\":3600000},{\"durationMs\":86400000},{\"durationMs\":604800000},{\"durationMs\":2592000000},{\"durationMs\":7776000000}]},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoDuo\\r\\n| make-series TotalEvents = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain};\",\"size\":0,\"title\":\"Events Over Time\",\"color\":\"greenDark\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"graphSettings\":{\"type\":0}},\"customWidth\":\"40\",\"name\":\"query - 12\",\"styleSettings\":{\"maxWidth\":\"55\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoDuo\\n| summarize count() by SrcGeoCountry\",\"size\":0,\"title\":\"Countries summary\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"30\",\"name\":\"query - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let tot_dvc = CiscoDuo\\r\\n| summarize e_count=dcount(SrcHostname)\\r\\n| extend Title='Authentication Devices';\\r\\nlet tot_usr = CiscoDuo\\r\\n| where EventType =~ 'authentication'\\r\\n| where EventResult =~ 'success'\\r\\n| summarize e_count=dcount(DstUserName)\\r\\n| extend Title='Total Users';\\r\\nlet tot_adm = CiscoDuo\\r\\n| where EventType =~ 'admin_login'\\r\\n| summarize e_count=dcount(DstUserName)\\r\\n| extend Title='Admin users';\\r\\nunion isfuzzy=true tot_dvc, tot_usr, tot_adm\\r\\n| order by e_count\",\"size\":3,\"title\":\"Summary\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Title\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"e_count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"purple\"}},\"showBorder\":false}},\"customWidth\":\"25\",\"name\":\"query - 0\",\"styleSettings\":{\"maxWidth\":\"30\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoDuo\\r\\n| where isnotempty(SrcIpAddr)\\r\\n| summarize count() by SrcIpAddr\",\"size\":3,\"title\":\"Source Addresses\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"query - 3\",\"styleSettings\":{\"margin\":\"10\",\"padding\":\"10\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoDuo\\r\\n| where isnotempty(DstUserName)\\r\\n| summarize count() by DstUserName\\r\\n| top 10 by count_\",\"size\":3,\"title\":\"Top Users\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"sortBy\":[{\"itemKey\":\"TotalEvents\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"TotalEvents\",\"sortOrder\":2}]},\"customWidth\":\"33\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoDuo\\n| where EventType =~ 'authentication'\\n| where EventResult =~ 'success'\\n| summarize e_count = count() by SrcDvcOs\\n| project-rename  DeviceOS=SrcDvcOs\",\"size\":0,\"title\":\"Device OS Types\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"User\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"TotalMailsReceived\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"magenta\"}},\"showBorder\":false}},\"customWidth\":\"30\",\"name\":\"query - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoDuo\\r\\n| where EventType in~ ('admin_login', 'admin_login_error')\\r\\n| project TimeGenerated, DstUserName, Result=strcat(iff(EventType =~ 'admin_login_error', '❌', '✅'))\\r\\n\",\"size\":3,\"title\":\"Admin login status\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\"},\"customWidth\":\"34\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoDuo\\r\\n| where EventType =~ 'authentication'\\r\\n| project TimeGenerated, DstUserName, Result=strcat(iff(EventResult =~ 'success', '✅', '❌'))\",\"size\":0,\"title\":\"User authentication status\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":50,\"filter\":true}},\"customWidth\":\"40\",\"name\":\"query - 12\",\"styleSettings\":{\"maxWidth\":\"33\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"CiscoDuo\\n| where EventType =~ 'user_create'\\n| project SrcUserName\",\"size\":0,\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"gridSettings\":{\"filter\":true},\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Title\"},\"subtitleContent\":{\"columnMatch\":\"SrcIpAddr\",\"formatter\":12,\"formatOptions\":{\"palette\":\"purpleDark\"}},\"showBorder\":false,\"rowLimit\":25},\"textSettings\":{\"style\":\"bignumber\"}},\"customWidth\":\"15\",\"name\":\"query - 10\"}],\"fromTemplateId\":\"sentinel-CiscoDuoWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[parameters('workspace')]",
      "location": "[parameters('workspace-location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoDuoSecurity Data Parser",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "CiscoDuoSecurity Data Parser",
            "category": "Samples",
            "functionAlias": "CiscoDuo",
            "query": "\nCiscoDuo_CL\r\n| extend EventVendor = 'Cisco'\r\n| extend EventProduct = 'Duo Security'\r\n| extend parse_json(description_s)\r\n| extend SrcDvcType=description_s['device'],\r\n    SrcIpAddr=iff(isnotempty(description_s), description_s['ip_address'], access_device_ip_s),\r\n    DstUserName=iff(isnotempty(username_s), username_s, user_name_s),\r\n    SrcUserName=object_s,\r\n    EventType=iff(isnotempty(eventtype_s), eventtype_s, event_type_s),\r\n    EventEndTime=unixtime_seconds_todatetime(tolong(timestamp_d)),\r\n    HttpUserAgentOriginal = description_s['user_agent']\r\n| project-rename DvcAction=action_s,\r\n    DvcHostname=host_s,\r\n    SrcGeoCountry=access_device_location_country_s,\r\n    SrcGeoCity=access_device_location_city_s,\r\n    SrcDvcOs=access_device_os_s,\r\n    DstGeoRegion=state_s,\r\n    EventResult=result_s,\r\n    EventResultDetails=reason_s,\r\n    AuthDeviceCountry=auth_device_location_country_s,\r\n    AuthFactor=factor_s,\r\n    AccessDvcIpAddr=access_device_ip_s,\r\n    AccessDvcBrowser=access_device_browser_s,\r\n    AccessDvcBrowserVersion=access_device_browser_version_s,\r\n    AccessDvcFlashVersion=access_device_flash_version_s,\r\n    AccessDvcEncryptionEnabled=access_device_is_encryption_enabled_b,\r\n    AccessDvcFirewallEnabled=access_device_is_firewall_enabled_b,\r\n    AccessDvcPasswordSet=access_device_is_password_set_b,\r\n    AccessDvcJavaVersion=access_device_java_version_s,\r\n    AccessDvcLocationState=access_device_location_state_s,\r\n    AccessDvcOsVersion=access_device_os_version_s,\r\n    AccessDvcSecurityAgents=access_device_security_agents_s,\r\n    Alias=alias_s,\r\n    User=email_s,\r\n    SrcAppId=application_key_s,\r\n    SrcAppName=application_name_s,\r\n    DvcIpAddr=auth_device_ip_s,\r\n    AuthDeviceCity=auth_device_location_city_s,\r\n    AuthDeviceState=auth_device_location_state_s,\r\n    SrcHostname=auth_device_name_s,\r\n    TrustedEndpointStatus=trusted_endpoint_status_s,\r\n    TransactionId=txid_g,\r\n    UserGroups=user_groups_s,\r\n    Explanations=explanations_s,\r\n    FromCommonNetblock=from_common_netblock_b,\r\n    FromNewUser=from_new_user_b,\r\n    SrcUserId=user_key_s,\r\n    SrcRiskLevel=low_risk_ip_b,\r\n    PriorityEvent=priority_event_b,\r\n    PriorityReasons=priority_reasons_s,\r\n    Sekey=sekey_s,\r\n    SurfacedAuthAccessDeviceBrowser=surfaced_auth_access_device_browser_s,\r\n    SurfacedAuthAccessDeviceBrowserVersion=surfaced_auth_access_device_browser_version_s,\r\n    SurfacedAuthAccessDeviceIp=surfaced_auth_access_device_ip_s,\r\n    SurfacedAuthAccessDeviceEncryptionEnabled=surfaced_auth_access_device_is_encryption_enabled_s,\r\n    SurfacedAuthAccessDeviceFirewallEnabled=surfaced_auth_access_device_is_firewall_enabled_s,\r\n    SurfacedAuthAccessDevicePasswordSet=surfaced_auth_access_device_is_password_set_s,\r\n    SurfacedAuthAccessDeviceLocationCity=surfaced_auth_access_device_location_city_s,\r\n    SurfacedAuthAccessDeviceLocationCountry=surfaced_auth_access_device_location_country_s,\r\n    SurfacedAuthAccessDeviceLocationState=surfaced_auth_access_device_location_state_s,\r\n    SurfacedAuthAccessDeviceOs=surfaced_auth_access_device_os_s,\r\n    SurfacedAuthAccessDeviceOsVersion_s=surfaced_auth_access_device_os_version_s,\r\n    SurfacedAuthAccessDeviceSecurityAgents=surfaced_auth_access_device_security_agents_s,\r\n    SurfacedAuthAlias=surfaced_auth_alias_s,\r\n    SurfacedAuthApplicationKey=surfaced_auth_application_key_s,\r\n    SurfacedAuthApplicationName=surfaced_auth_application_name_s,\r\n    SurfacedAuthEmail=surfaced_auth_email_s,\r\n    SurfacedAuthFactor=surfaced_auth_factor_s,\r\n    SurfacedAuthIsotimestamp=surfaced_auth_isotimestamp_t,\r\n    SurfacedAuthOodSoftware_s=surfaced_auth_ood_software_s,\r\n    SurfacedAuthReason=surfaced_auth_reason_s,\r\n    SurfacedAuthResult=surfaced_auth_result_s,\r\n    SurfacedAuthTimestamp=surfaced_auth_timestamp_d,\r\n    SurfacedAuthTransactionId=surfaced_auth_txid_s,\r\n    SurfacedAuthUserGroups=surfaced_auth_user_groups_s,\r\n    SurfacedAuthUserKey=surfaced_auth_user_key_s,\r\n    SurfacedAuthUserName=surfaced_auth_user_name_s,\r\n    SurfacedTimestamp=surfaced_timestamp_d,\r\n    EventUid=triage_event_uri_s,\r\n    TriagedAsInteresting=triaged_as_interesting_b,\r\n    Context=context_s,\r\n    Credits=credits_d,\r\n    IsoTimestamp=isotimestamp_t,\r\n    Phone=phone_s,\r\n    SrcDomainType=type_s\r\n    ",
            "version": 1
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoDuoSecurity Hunting Query 1",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco Duo - Admin failure authentications",
            "category": "Hunting Queries",
            "query": "CiscoDuo\n| where TimeGenerated > ago(24h)\n| where DvcAction =~ \"admin_2fa_error\"\n| project TimeGenerated, SrcIpAddr, DstUserName\n| extend AccountCustomEntity = DstUserName, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for administrator issue completing secondary authentication."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoDuoSecurity Hunting Query 2",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco Duo - Delete actions",
            "category": "Hunting Queries",
            "query": "CiscoDuo\n| where TimeGenerated > ago(24h)\n| where DvcAction in~ ('activation_delete_link', 'admin_activation_delete', 'admin_delete', 'azure_directory_delete', 'bypass_delete', 'delete_child_customer', 'directory_delete', 'feature_delete', 'group_delete', 'hardtoken_delete', 'integration_delete', 'phone_delete', 'policy_delete', 'u2ftoken_delete', 'user_delete')\n| project TimeGenerated, SrcIpAddr, DstUserName\n| extend AccountCustomEntity = SrcUserName, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for delete actions performed by admin users."
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoDuoSecurity Hunting Query 3",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco Duo - Admin failure authentications",
            "category": "Hunting Queries",
            "query": "CiscoDuo\n| where TimeGenerated > ago(24h)\n| where DvcAction =~ \"admin_login_error\"\n| project TimeGenerated, SrcIpAddr, DstUserName\n| extend AccountCustomEntity = DstUserName, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches admin failure authentication events."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoDuoSecurity Hunting Query 4",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco Duo - Authentication errors",
            "category": "Hunting Queries",
            "query": "CiscoDuo\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'authentication'\n| where EventResult =~ 'error'\n| project TimeGenerated, DstUserName, SrcIpAddr, EventResultDetails\n| extend AccountCustomEntity = DstUserName, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for authentication errors."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoDuoSecurity Hunting Query 5",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco Duo - Authentication error reasons",
            "category": "Hunting Queries",
            "query": "CiscoDuo\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'authentication'\n| where EventResult in~ ('denied', 'failure')\n| summarize count() by EventResultDetails, DstUserName\n| extend AccountCustomEntity = DstUserName\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for authentication error reasons."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoDuoSecurity Hunting Query 6",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco Duo - Deleted users",
            "category": "Hunting Queries",
            "query": "CiscoDuo\n| where TimeGenerated > ago(24h)\n| where DvcAction =~ \"user_delete\"\n| project TimeGenerated, SrcIpAddr, SrcUserName, DstUserName\n| extend AccountCustomEntity = SrcUserName, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for deleted users."
              },
              {
                "name": "tactics",
                "value": "Impact"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoDuoSecurity Hunting Query 7",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco Duo - Fraud authentications",
            "category": "Hunting Queries",
            "query": "CiscoDuo\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'authentication'\n| where EventResult =~ 'fraud'\n| project TimeGenerated, DstUserName, SrcIpAddr\n| extend AccountCustomEntity = DstUserName, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for fraud authentication events."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoDuoSecurity Hunting Query 8",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco Duo - New users",
            "category": "Hunting Queries",
            "query": "CiscoDuo\n| where TimeGenerated > ago(24h)\n| where DvcAction \"user_create\"\n| project TimeGenerated, SrcIpAddr, SrcUserName, DstUserName\n| extend AccountCustomEntity = SrcUserName, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for new users created."
              },
              {
                "name": "tactics",
                "value": "InitialAccess,Persistence"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoDuoSecurity Hunting Query 9",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco Duo - Devices with vulnerable OS",
            "category": "Hunting Queries",
            "query": "let os_latest = 'x.x.xxx'; //put the latest version of OS here before running the query\nCiscoDuo\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'authentication'\n| where AccessDvcOsVersion != os_latest\n| project TimeGenerated, SrcIpAddr, DstUserName\n| extend AccountCustomEntity = DstUserName, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for devices with vulnerable OS."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "CiscoDuoSecurity Hunting Query 10",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Cisco Duo - Devices with unsecure settings",
            "category": "Hunting Queries",
            "query": "CiscoDuo\n| where TimeGenerated > ago(24h)\n| where EventType =~ 'authentication'\n| where  AccessDvcEncryptionEnabled == False or AccessDvcFirewallEnabled == False or AccessDvcPasswordSet == False\n| project TimeGenerated, SrcIpAddr, DstUserName\n| extend AccountCustomEntity = DstUserName, IPCustomEntity = SrcIpAddr\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches for devices with unsecure settings."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        }
      ]
    },
    {
      "id": "[variables('_connector1-source')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Cisco Duo Security",
          "publisher": "Cisco",
          "descriptionMarkdown": "The Cisco Duo Security data connector provides the capability to ingest [authentication logs](https://duo.com/docs/adminapi#authentication-logs), [administrator logs](https://duo.com/docs/adminapi#administrator-logs), [telephony logs](https://duo.com/docs/adminapi#telephony-logs), [offline enrollment logs](https://duo.com/docs/adminapi#offline-enrollment-logs) and [Trust Monitor events](https://duo.com/docs/adminapi#trust-monitor) into Azure Sentinel using the Cisco Duo Admin API. Refer to [API documentation](https://duo.com/docs/adminapi) for more information.",
          "graphQueries": [
            {
              "metricName": "Cisco Duo logs",
              "legend": "CiscoDuo_CL",
              "baseQuery": "CiscoDuo_CL"
            }
          ],
          "sampleQueries": [
            {
              "description": "All Cisco Duo logs",
              "query": "CiscoDuo_CL\n| sort by TimeGenerated desc"
            }
          ],
          "dataTypes": [
            {
              "name": "CiscoDuo_CL",
              "lastDataReceivedQuery": "CiscoDuo_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "CiscoDuo_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(1d)"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "Cisco Duo API credentials",
                "description": "Cisco Duo API credentials with permission *Grant read log* is required for Cisco Duo API. See the [documentation](https://duo.com/docs/adminapi#first-steps) to learn more about creating Cisco Duo API credentials."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to the Cisco Duo API to pull logs into Azure Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
            },
            {
              "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
            },
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected [**CiscoDuo**](https://aka.ms/sentinel-CiscoDuoSecurity-parser) which is deployed with the Azure Sentinel Solution."
            },
            {
              "description": "**STEP 1 - Obtaining Cisco Duo Admin API credentials**\n\n1. Follow [the instructions](https://duo.com/docs/adminapi#first-steps) to obtain **integration key**, **secret key**, and **API hostname**. Use **Grant read log** permission in the 4th step of [the instructions](https://duo.com/docs/adminapi#first-steps)."
            },
            {
              "description": "**STEP 2 - Choose ONE from the following two deployment options to deploy the connector and the associated Azure Function**\n\n>**IMPORTANT:** Before deploying the data connector, have the Workspace ID and Workspace Primary Key (can be copied from the following), as well as Azure Blob Storage connection string and container name, readily available.",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            },
            {
              "description": "Use this method for automated deployment of the data connector using an ARM Template.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-CiscoDuoSecurity-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the **Cisco Duo Integration Key**, **Cisco Duo Secret Key**, **Cisco Duo API Hostname**, **Cisco Duo Log Types**, **Azure Sentinel Workspace Id**, **Azure Sentinel Shared Key**\n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**.\n5. Click **Purchase** to deploy.",
              "title": "Option 1 - Azure Resource Manager (ARM) Template"
            },
            {
              "description": "Use the following step-by-step instructions to deploy the data connector manually with Azure Functions (Deployment via Visual Studio Code).",
              "title": "Option 2 - Manual Deployment of Azure Functions"
            },
            {
              "description": "**1. Deploy a Function App**\n\n> **NOTE:** You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/create-first-function-vs-code-python) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-CiscoDuoSecurity-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions.\n\n\te. **Select a runtime:** Choose Python 3.8.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Azure Sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
            },
            {
              "description": "**2. Configure the Function App**\n\n1. In the Function App, select the Function App Name and select **Configuration**.\n2. In the **Application settings** tab, select **+ New application setting**.\n3. Add each of the following application settings individually, with their respective string values (case-sensitive): \n\t\tCISCO_DUO_INTEGRATION_KEY\n\t\tCISCO_DUO_SECRET_KEY\n\t\tCISCO_DUO_API_HOSTNAME\n\t\tCISCO_DUO_LOG_TYPES\n\t\tWORKSPACE_ID\n\t\tSHARED_KEY\n\t\tlogAnalyticsUri (Optional)\n - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://WORKSPACE_ID.ods.opinsights.azure.us`. \n4. Once all application settings have been entered, click **Save**."
            }
          ],
          "additionalRequirementBanner": ">This data connector depends on a parser based on a Kusto Function to work as expected [**CiscoDuo**](https://aka.ms/sentinel-CiscoDuoSecurity-parser) which is deployed with the Azure Sentinel Solution."
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when AD syncronization failed.",
        "displayName": "Cisco Duo - AD sync failed",
        "enabled": false,
        "query": "CiscoDuo\n| where DvcAction =~ \"ad_sync_failed\"\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ],
            "entityType": "IP"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when admin user is deleted.",
        "displayName": "Cisco Duo - Admin user deleted",
        "enabled": false,
        "query": "CiscoDuo\n| where DvcAction =~ \"admin_delete\"\n| extend AccountCustomEntity = DstUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when multiple admin 2FA failures occurs.",
        "displayName": "Cisco Duo - Multiple admin 2FA failures",
        "enabled": false,
        "query": "let threshold = 10;\nCiscoDuo\n| where DvcAction =~ \"admin_2fa_error\"\n| summarize count() by DstUserName, bin(TimeGenerated, 10m)\n| where count_ > threshold\n| extend AccountCustomEntity = DstUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when admin's password was reset.",
        "displayName": "Cisco Duo - Admin password reset",
        "enabled": false,
        "query": "CiscoDuo\n| where DvcAction =~ \"admin_reset_password\"\n| extend AccountCustomEntity = DstUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Persistence"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic5-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when multiple user login failures occurs.",
        "displayName": "Cisco Duo - Multiple user login failures",
        "enabled": false,
        "query": "let threshold = 10;\nCiscoDuo\n| where EventType =~ 'authentication'\n| where EventResult in~ ('denied', 'failure')\n| summarize count() by DstUserName, bin(TimeGenerated, 10m)\n| where count_ > threshold\n| extend AccountCustomEntity = DstUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic6-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when multiple users were deleted.",
        "displayName": "Cisco Duo - Multiple users deleted",
        "enabled": false,
        "query": "CiscoDuo\n| where DvcAction =~ \"user_delete\"\n| summarize count() by DstUserName, bin(TimeGenerated, 10m)\n| where count_ > 1\n| extend AccountCustomEntity = DstUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic7-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects new access device.",
        "displayName": "Cisco Duo - New access device",
        "enabled": false,
        "query": "CiscoDuo\n| where EventType =~ 'authentication'\n| where EventResult =~ 'success'\n| where isnotempty(AccessDvcIpAddr)\n| summarize dvc_ip = makeset(AccessDvcIpAddr) by DstUserName\n| join (CiscoDuo\n        | where EventType =~ 'authentication'\n        | where EventResult =~ 'success') on DstUserName\n| where dvc_ip !has AccessDvcIpAddr\n| extend IPCustomEntity = AccessDvcIpAddr, AccountCustomEntity = DstUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P14D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic8-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when new admin user is created.",
        "displayName": "Cisco Duo - Admin user created",
        "enabled": false,
        "query": "CiscoDuo\n| where DvcAction =~ \"admin_create\"\n| extend AccountCustomEntity = DstUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Persistence",
          "PrivilegeEscalation"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic9-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects new location of authentication device.",
        "displayName": "Cisco Duo - Authentication device new location",
        "enabled": false,
        "query": "CiscoDuo\n| where EventType =~ 'authentication'\n| where EventResult =~ 'success'\n| where isnotempty(AuthDeviceCountry)\n| summarize src_c = makeset(AuthDeviceCountry) by SrcIpAddr\n| join (CiscoDuo\n        | where EventType =~ 'authentication'\n        | where EventResult =~ 'success') on SrcIpAddr\n| where src_c !has AuthDeviceCountry\n| extend IPCustomEntity = SrcIpAddr, AccountCustomEntity = DstUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P14D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic10-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects when unexpected authentication factor used.",
        "displayName": "Cisco Duo - Unexpected authentication factor",
        "enabled": false,
        "query": "let allowed_auth_f = dynamic(['duo_push', 'duo_mobile_passcode']);\nCiscoDuo\n| where EventType =~ 'authentication'\n| where EventResult =~ 'success'\n| where AuthFactor !in~ (allowed_auth_f)\n| extend IPCustomEntity = SrcIpAddr, AccountCustomEntity = DstUserName\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.0.5",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "CiscoDuoSecurity",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Mallikarjun Udanashiv",
          "email": "v-maudan@microsoft.com"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_CiscoDuo_workbook')]",
              "version": "1.0.5"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_CiscoDuo_Parser')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoDuoAdmin2FAFailure_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoDuoAdminDeleteActions_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoDuoAdminFailure_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoDuoAuthenticationErrorEvents_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoDuoAuthenticationErrorReasons_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoDuoDeletedUsers_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoDuoFraudAuthentication_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoDuoNewUsers_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoDuoUnpachedAccessDevices_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_CiscoDuoUnsecuredDevices_HuntingQueries')]",
              "version": "1.0.5"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_CiscoDuoSecurityConnector')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoDuoADSyncFailed_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoDuoAdminDeleted_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoDuoAdminMFAFailures_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoDuoAdminPasswordReset_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoDuoMultipleUserLoginFailures_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoDuoMultipleUsersDeleted_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoDuoNewAccessDevice_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoDuoNewAdmin_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoDuoNewAuthDeviceLocation_AnalyticalRules')]",
              "version": "1.0.5"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_CiscoDuoUnexpectedAuthFactor_AnalyticalRules')]",
              "version": "1.0.5"
            }
          ]
        },
        "firstPublishDate": "2022-01-07",
        "providers": [
          "Cisco"
        ],
        "categories": {
          "domains": [
            "Identity"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
