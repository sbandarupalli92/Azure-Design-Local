{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "PlaybookName": {
            "defaultValue": "GCP-DisableServiceAccountKey",
            "type": "String"
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "GCPIAMCustomAPIConnectionName": "[concat('gcpiam-connection-', parameters('PlaybookName'))]",
        "customApis_gcpiam_name": "GoogleCloudPlatformIAM"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('GCPIAMCustomAPIConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('GCPIAMCustomAPIConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', variables('customApis_gcpiam_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('GCPIAMCustomAPIConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Add_comment_to_incident_(V3)": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p>Playbook execution results:<br>\n@{body('Create_HTML_table')}</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            },
                            "runAfter": {
                                "Create_HTML_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Create_HTML_table": {
                            "inputs": {
                                "format": "HTML",
                                "from": "@variables('results')"
                            },
                            "runAfter": {
                                "For_each_alert": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table"
                        },
                        "For_each_alert": {
                            "actions": {
                                "For_each_project_id": {
                                    "actions": {
                                        "For_each_service_account": {
                                            "actions": {
                                                "For_each_key": {
                                                    "actions": {
                                                        "Append_to_array_variable": {
                                                            "inputs": {
                                                                "name": "results",
                                                                "value": {
                                                                    "message": "Service Account Key @{items('For_each_key')} has not been disabled.",
                                                                    "status": "error"
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "iam.projects.serviceAccounts.keys.disable": [
                                                                    "TimedOut",
                                                                    "Failed"
                                                                ]
                                                            },
                                                            "type": "AppendToArrayVariable"
                                                        },
                                                        "Append_to_array_variable_2": {
                                                            "inputs": {
                                                                "name": "results",
                                                                "value": {
                                                                    "message": "Service Account Key @{items('For_each_key')} has been disabled.",
                                                                    "status": "success"
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Append_to_array_variable": [
                                                                    "Skipped"
                                                                ]
                                                            },
                                                            "type": "AppendToArrayVariable"
                                                        },
                                                        "iam.projects.serviceAccounts.keys.disable": {
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['gcpiamapi']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/v1/projects/@{encodeURIComponent(outputs('parse_project_id'))}/serviceAccounts/@{encodeURIComponent(items('For_each_service_account'))}/keys/@{encodeURIComponent(items('For_each_key'))}:disable"
                                                            },
                                                            "runAfter": {},
                                                            "type": "ApiConnection"
                                                        }
                                                    },
                                                    "foreach": "@body('Parse_JSON_-_get_project_id_and_service_account_and_key_from_alert')?['gcp_service_acc_key']",
                                                    "runAfter": {},
                                                    "type": "Foreach"
                                                }
                                            },
                                            "foreach": "@body('Parse_JSON_-_get_project_id_and_service_account_and_key_from_alert')?['gcp_service_account']",
                                            "runAfter": {
                                                "parse_project_id": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "parse_project_id": {
                                            "inputs": "@replace(item(), 'projects/', '')",
                                            "runAfter": {},
                                            "type": "Compose"
                                        }
                                    },
                                    "foreach": "@body('Parse_JSON_-_get_project_id_and_service_account_and_key_from_alert')?['gcp_project_id']",
                                    "runAfter": {
                                        "Parse_JSON_-_get_project_id_and_service_account_and_key_from_alert": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Parse_JSON_-_get_project_id_and_service_account_and_key_from_alert": {
                                    "inputs": {
                                        "content": "@items('For_each_alert')?['properties']?['additionalData']?['Custom Details']",
                                        "schema": {
                                            "properties": {
                                                "gcp_project_id": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "gcp_service_acc_key": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "gcp_service_account": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "ParseJson"
                                }
                            },
                            "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                            "runAfter": {
                                "Initialize_variable_results": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable_results": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "results",
                                        "type": "array"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            },
                            "type": "ApiConnectionWebhook"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "id": "[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',resourceGroup().location,'/managedApis/azuresentinel')]"
                            },
                            "gcpiamapi": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('GCPIAMCustomAPIConnectionName'))]",
                                "connectionName": "[variables('GCPIAMCustomAPIConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/customApis/', variables('customApis_gcpiam_name'))]"
                            }
                        }
                    }
                }
            }
        }
    ]
}