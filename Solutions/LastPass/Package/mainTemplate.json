{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Thijs Lecomte - thijs.lecomte@thecollective.eu",
    "comments": "Solution template for LastPass"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "formattedTimeNow": {
      "type": "string",
      "defaultValue": "[utcNow('g')]",
      "metadata": {
        "description": "Appended to workbook displayNames to make them unique"
      }
    },
    "workbook1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "LastPass",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic4-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic5-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "connector1-name": {
      "type": "string",
      "defaultValue": "f671b2d5-acd2-4911-88d1-d3dec736bcce"
    },
    "watchlist1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    }
  },
  "variables": {
    "LastPassWorkbook_workbook": "LastPassWorkbook_workbook",
    "_LastPassWorkbook_workbook": "[variables('LastPassWorkbook_workbook')]",
    "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
    "_workbook-source": "[variables('workbook-source')]",
    "EmployeeAccountDeleted_AnalyticalRules": "EmployeeAccountDeleted_AnalyticalRules",
    "_EmployeeAccountDeleted_AnalyticalRules": "[variables('EmployeeAccountDeleted_AnalyticalRules')]",
    "FailedSigninDueToMFA_AnalyticalRules": "FailedSigninDueToMFA_AnalyticalRules",
    "_FailedSigninDueToMFA_AnalyticalRules": "[variables('FailedSigninDueToMFA_AnalyticalRules')]",
    "HighlySensitivePasswordAccessed_AnalyticalRules": "HighlySensitivePasswordAccessed_AnalyticalRules",
    "_HighlySensitivePasswordAccessed_AnalyticalRules": "[variables('HighlySensitivePasswordAccessed_AnalyticalRules')]",
    "TIMapIPEntityToLastPass_AnalyticalRules": "TIMapIPEntityToLastPass_AnalyticalRules",
    "_TIMapIPEntityToLastPass_AnalyticalRules": "[variables('TIMapIPEntityToLastPass_AnalyticalRules')]",
    "UnusualVolumeOfPasswordsUpdatedOrRemoved_AnalyticalRules": "UnusualVolumeOfPasswordsUpdatedOrRemoved_AnalyticalRules",
    "_UnusualVolumeOfPasswordsUpdatedOrRemoved_AnalyticalRules": "[variables('UnusualVolumeOfPasswordsUpdatedOrRemoved_AnalyticalRules')]",
    "FailedSigninsDueToMFA_HuntingQueries": "FailedSigninsDueToMFA_HuntingQueries",
    "_FailedSigninsDueToMFA_HuntingQueries": "[variables('FailedSigninsDueToMFA_HuntingQueries')]",
    "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
    "LoginIntoLastPassFromUnknownIP_HuntingQueries": "LoginIntoLastPassFromUnknownIP_HuntingQueries",
    "_LoginIntoLastPassFromUnknownIP_HuntingQueries": "[variables('LoginIntoLastPassFromUnknownIP_HuntingQueries')]",
    "PasswordMoveToSharedFolder_HuntingQueries": "PasswordMoveToSharedFolder_HuntingQueries",
    "_PasswordMoveToSharedFolder_HuntingQueries": "[variables('PasswordMoveToSharedFolder_HuntingQueries')]",
    "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
    "_connector1-source": "[variables('connector1-source')]",
    "Connector": "Connector",
    "_Connector": "[variables('Connector')]",
    "Last Pass High Sensitive Passwords": "Last Pass High Sensitive Passwords",
    "_Last Pass High Sensitive Passwords": "[variables('Last Pass High Sensitive Passwords')]",
    "sourceId": "thecollectiveconsultingbv1584980370320.microsoft-sentinel-solution-lastpass",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook1-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2021-08-01",
      "properties": {
        "displayName": "[concat(parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Additional diagrams about generic LastPass usage\\r\\n---\"},\"name\":\"text - 6\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"LastPassNativePoller_CL\\r\\n| where isnotempty(Data_s)\\r\\n| summarize count() by Data_s\\r\\n| order by count_\\r\\n| render piechart\",\"size\":3,\"title\":\"Overview of the sites used\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"30\",\"name\":\"query - 7\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"LastPassNativePoller_CL\\r\\n| where Username_s != \\\"API\\\"\\r\\n| summarize count() by Username_s\\r\\n| order by count_\\r\\n| render piechart\",\"size\":3,\"title\":\"Overview of the active users\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"30\",\"name\":\"query - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"LastPassNativePoller_CL\\r\\n| where Action_s != \\\"Reporting\\\"\\r\\n| summarize count() by Action_s\\r\\n| order by count_\\r\\n| render piechart\",\"size\":3,\"title\":\"Overview of the activity types\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"30\",\"name\":\"query - 2\"}]},\"name\":\"Additional diagrams about generic LastPass usage\"},{\"type\":1,\"content\":{\"json\":\"## Insights into sign-in methods\\r\\n---\"},\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let IPs = SigninLogs | project IPAddress;\\r\\nLastPassNativePoller_CL\\r\\n| where Action_s != \\\"Reporting\\\"\\r\\n| where IP_Address_s !in (IPs)\\r\\n| summarize Count = count() by bin(todatetime(Time_s), 1d)\\r\\n| render timechart\",\"size\":3,\"title\":\"Sign-ins using an IP which has not been observed before\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"showMetrics\":false,\"ySettings\":{\"min\":0}}},\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"LastPassNativePoller_CL\\r\\n| where Action_s == \\\"Log in\\\"\\r\\n| join (SigninLogs | where AppDisplayName == \\\"LastPass Enterprise\\\") on $left.IP_Address_s == $right.IPAddress\\r\\n| extend isCompliant = iff(DeviceDetail.isCompliant == \\\"true\\\", \\\"Compliant\\\", \\\"Non-Compliant\\\")\\r\\n| summarize count() by isCompliant\",\"size\":3,\"title\":\"Overview of compliancy state of device used to login\",\"timeContext\":{\"durationMs\":2592000000},\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"name\":\"query - 5\"},{\"type\":1,\"content\":{\"json\":\"## Logins in to admin console\"},\"name\":\"text - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"LastPassNativePoller_CL\\n| where Action_s == \\\"Login to Admin Console\\\"\\n| summarize Count = count() by Username_s\",\"size\":3,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 2\"}],\"fromTemplateId\":\"sentinel-LastPass\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This rule will monitor for any employee accounts being deleted.\nDeleting an employee account can have a big potential impact as all of the data for that user will be removed.",
        "displayName": "Employee account deleted",
        "enabled": false,
        "query": "LastPassNativePoller_CL\n| where Action_s == \"Employee Account Deleted\" or Action_s == \"Remove User From Company\"\n| extend AccountCustomEntity = Username_s, IPCustomEntity = IP_Address_s\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ],
            "entityType": "IP"
          }
        ],
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This rule will check if a sign-in failed into LastPass due to MFA.\nAn incident can indicate the potential brute forcing of a LastPass account. \nThe use of MFA is identified by combining the sign-in logs, this rule assumes LastPass is federated to AAD.",
        "displayName": "Failed sign-ins into LastPass due to MFA",
        "enabled": false,
        "query": "LastPassNativePoller_CL\n| where Action_s == \"Log in\"\n| join (SigninLogs | where AppDisplayName == \"LastPass Enterprise\") on $left.IP_Address_s == $right.IPAddress and $left.Username_s == $right.UserPrincipalName\n| where ResultType in (50074, 50076)\n| extend AccountCustomEntity = Username_s, IPCustomEntity = IP_Address_s\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P1D",
        "severity": "Low",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ],
            "entityType": "IP"
          }
        ],
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This rule will monitor access to highly sensitive passwords.\nWithin the Watchlist called 'LastPass' define passwords which are deemed highly sensitive (such as password to a high privileged application).\nWhen an activity is observed against such password, an incident is created.",
        "displayName": "Highly Sensitive Password Accessed",
        "enabled": false,
        "query": "let watchlist = (_GetWatchlist(\"LastPass\") | project name);\nLastPassNativePoller_CL\n| where Data_s in (watchlist)\n| extend AccountCustomEntity = Username_s, IPCustomEntity = IP_Address_s, URLCustomEntity = Data_s\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "CredentialAccess",
          "Discovery"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Url",
                "columnName": "URLCustomEntity"
              }
            ],
            "entityType": "URL"
          }
        ],
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Identifies a match in LastPass table from any IP IOC from TI",
        "displayName": "TI map IP entity to LastPass data",
        "enabled": false,
        "query": "let dt_lookBack = 1h;\nlet ioc_lookBack = 14d;\nThreatIntelligenceIndicator\n| where TimeGenerated >= ago(ioc_lookBack) and ExpirationDateTime > now()\n| where Active == true\n// Picking up only IOC's that contain the entities we want\n| where isnotempty(NetworkIP) or isnotempty(EmailSourceIpAddress) or isnotempty(NetworkDestinationIP) or isnotempty(NetworkSourceIP)\n// As there is potentially more than 1 indicator type for matching IP, taking Network IP first, then others if that is empty.\n// Taking the first non-empty value based on potential IOC match availability\n| extend TI_ipEntity = iff(isnotempty(NetworkIP), NetworkIP, NetworkDestinationIP)\n| extend TI_ipEntity = iff(isempty(TI_ipEntity) and isnotempty(NetworkSourceIP), NetworkSourceIP, TI_ipEntity)\n| extend TI_ipEntity = iff(isempty(TI_ipEntity) and isnotempty(EmailSourceIpAddress), EmailSourceIpAddress, TI_ipEntity)\n| join (\n    LastPassNativePoller_CL | where todatetime(Time_s) >= ago(dt_lookBack)\n    | where Action_s != \"Reporting\"\n    // renaming time column so it is clear the log this came from\n    | extend LastPass_TimeGenerated = todatetime(Time_s)\n)\non $left.TI_ipEntity == $right.IP_Address_s\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| project LatestIndicatorTime, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore, LastPass_TimeGenerated, \nTI_ipEntity, IP_Address_s, Username_s, Action_s, Data_s, NetworkIP, NetworkDestinationIP, NetworkSourceIP, EmailSourceIpAddress\n| extend timestamp = LastPass_TimeGenerated, AccountCustomEntity = Username_s, IPCustomEntity = IP_Address_s, URLCustomEntity = Url\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P14D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Url",
                "columnName": "URLCustomEntity"
              }
            ],
            "entityType": "URL"
          }
        ],
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic5-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "This rule will check if there is an unnormal activity of sites that are deleted or changed per user.\n The normal amount of actions is calculated based on the previous 14 days of activity. If there is a significant increase, an incident will be created.",
        "displayName": "Unusual Volume of Password Updated or Removed",
        "enabled": false,
        "query": "let threshold = toscalar (LastPassNativePoller_CL\n| where todatetime(Time_s) >= startofday(ago(14d)) and todatetime(Time_s) < startofday(ago(1d))\n| where Action_s == \"Site Changed\" or Action_s == \"Deleted Sites\" \n| summarize count() by Username_s, bin(todatetime(Time_s),1d)\n| summarize avg(count_), stdev(count_)\n| project threshold = avg_count_+stdev_count_*2);\nLastPassNativePoller_CL\n| where Username_s != \"API\"\n| where Action_s == \"Site Changed\" or Action_s == \"Deleted Sites\" and todatetime(Time_s) >= startofday(ago(1d))\n| summarize count() by Username_s, IP_Address_s\n| where count_ > ['threshold']\n| extend AccountCustomEntity = Username_s, IPCustomEntity = IP_Address_s\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P14D",
        "severity": "Low",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "identifier": "Name",
                "columnName": "AccountCustomEntity"
              }
            ],
            "entityType": "Account"
          },
          {
            "fieldMappings": [
              {
                "identifier": "Address",
                "columnName": "IPCustomEntity"
              }
            ],
            "entityType": "IP"
          }
        ],
        "eventGroupingSettings": {
          "aggregationKind": "AlertPerResult"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[parameters('workspace')]",
      "location": "[parameters('workspace-location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "LastPass Hunting Query 1",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Failed sign-ins into LastPass due to MFA.",
            "category": "Hunting Queries",
            "query": "LastPassNativePoller_CL\n| where Action_s == \"Log in\"\n| join (SigninLogs | where AppDisplayName == \"LastPass Enterprise\") on $left.IP_Address_s == $right.IPAddress and $left.Username_s == $right.UserPrincipalName\n| where ResultType in (50074, 50076)\n| extend AccountCustomEntity = Username_s, IPCustomEntity = IP_Address_s, TimestampCustomEntity = todatetime(Time_s)\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This will check for sign-ins into LastPass which are not confirmed using MFA based on the Sign-in Logs"
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "LastPass Hunting Query 2",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Login into LastPass from a previously unknown IP.",
            "category": "Hunting Queries",
            "query": "let IPs = SigninLogs\n  | project IPAddress;\nLastPassNativePoller_CL\n| where Action_s != \"Reporting\"\n| where IP_Address_s !in (IPs)\n| summarize by IP_Address_s, Username_s, bin(todatetime(Time_s), 1d)\n| extend AccountCustomEntity = Username_s, IPCustomEntity = IP_Address_s, TimestampCustomEntity = Time_s\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query will check how many activity there is in LastPass from IPs that are not seen before in the Sign-in Logs"
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "LastPass Hunting Query 3",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Password moved to shared folders",
            "category": "Hunting Queries",
            "query": "LastPassNativePoller_CL\n| where Action_s == \"Move to Shared Folder\"\n| extend AccountCustomEntity = Username_s, IPCustomEntity = IP_Address_s, URLCustomEntity = Data_s, TimestampCustomEntity = todatetime(Time_s)\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "This query will check for data that is shared in the LastPass environment."
              },
              {
                "name": "tactics",
                "value": "Collection"
              }
            ]
          }
        }
      ]
    },
    {
      "id": "[variables('_connector1-source')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "APIPolling",
      "properties": {
        "connectorUiConfig": {
          "title": "LastPass Enterprise - Reporting (Polling CCP)",
          "publisher": "The Collective Consulting BV",
          "descriptionMarkdown": "The [LastPass Enterprise](https://www.lastpass.com/products/enterprise-password-management-and-sso) connector provides the capability to LastPass reporting (audit) logs into Azure Sentinel. The connector provides visibility into logins and activity within LastPass (such as reading and removing passwords).",
          "graphQueriesTableName": "LastPassNativePoller_CL",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "LastPass Audit Events",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "Password moved to shared folders",
              "query": "{{graphQueriesTableName}}\n | where Action_s == \"Move to Shared Folder\"\n | extend AccountCustomEntity = Username_s, IPCustomEntity = IP_Address_s, URLCustomEntity = Data_s, TimestampCustomEntity = todatetime(Time_s) "
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "SentinelKindsV2",
              "value": [
                "APIPolling"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true,
                  "write": true,
                  "read": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "LastPass API Key and CID",
                "description": "A LastPass API key and CID are required. [See the documentation to learn more about LastPass API](https://support.logmeininc.com/lastpass/help/use-the-lastpass-provisioning-api-lp010068)."
              }
            ]
          },
          "instructionSteps": [
            {
              "title": "Connect LastPass Enterprise to Azure Sentinel",
              "description": "Provide the LastPass Provisioning API Key.",
              "instructions": [
                {
                  "parameters": {
                    "enable": "true",
                    "userRequestPlaceHoldersInput": [
                      {
                        "displayText": "cid",
                        "requestObjectKey": "queryParametersTemplate",
                        "placeHolderName": "{{cidPlaceHolder}}"
                      }
                    ]
                  },
                  "type": "APIKey"
                }
              ]
            }
          ]
        },
        "pollingConfig": {
          "auth": {
            "authType": "APIKey",
            "APIKeyName": "provhash",
            "IsAPIKeyInPostPayload": true
          },
          "request": {
            "apiEndpoint": "https://lastpass.com/enterpriseapi.php",
            "rateLimitQPS": 2,
            "httpMethod": "Post",
            "queryTimeFormat": "yyyy-MM-ddTHH:mm:ssZ",
            "retryCount": 3,
            "queryWindowInMin": 10,
            "timeoutInSeconds": 120,
            "queryParametersTemplate": "{'cid': '{{cidPlaceHolder}}', 'cmd': 'reporting', 'data': { 'from': '{_QueryWindowStartTime}', 'to': '{_QueryWindowEndTime}' }, '{_APIKeyName}': '{_APIKey}'}",
            "isPostPayloadJson": true
          },
          "response": {
            "eventsJsonPaths": [
              "$.data"
            ],
            "successStatusJsonPath": "$.status",
            "successStatusValue": "OK",
            "convertChildPropertiesToArray": true
          },
          "paging": {
            "pagingType": "NextPageToken",
            "nextPageParaName": "next",
            "nextPageTokenJsonPath": "$.next"
          }
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist1-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "kind": "",
      "properties": {
        "displayName": "Last Pass High Sensitive Passwords",
        "source": "LastPass.csv",
        "description": "Used to maintain list of high sensitive accounts in LastPass.",
        "provider": "Custom",
        "isDeleted": false,
        "labels": [],
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "name",
        "rawContent": "name\r\nSamplevalue1\r\nsamplevalue4\r\n"
      },
      "apiVersion": "2021-03-01-preview"
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.0.3",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "LastPass",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Thijs Lecomte",
          "email": "thijs.lecomte@thecollective.eu"
        },
        "support": {
          "name": "The Collective Consulting",
          "email": "support@thecollective.eu",
          "tier": "Partner",
          "link": "https://thecollective.eu"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_LastPassWorkbook_workbook')]",
              "version": "1.0.3"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_EmployeeAccountDeleted_AnalyticalRules')]",
              "version": "1.0.3"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_FailedSigninDueToMFA_AnalyticalRules')]",
              "version": "1.0.3"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_HighlySensitivePasswordAccessed_AnalyticalRules')]",
              "version": "1.0.3"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_TIMapIPEntityToLastPass_AnalyticalRules')]",
              "version": "1.0.3"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_UnusualVolumeOfPasswordsUpdatedOrRemoved_AnalyticalRules')]",
              "version": "1.0.3"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_FailedSigninsDueToMFA_HuntingQueries')]",
              "version": "1.0.3"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_LoginIntoLastPassFromUnknownIP_HuntingQueries')]",
              "version": "1.0.3"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_PasswordMoveToSharedFolder_HuntingQueries')]",
              "version": "1.0.3"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_Connector')]",
              "version": "1.0.3"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_Last Pass High Sensitive Passwords')]",
              "version": "1.0.3"
            }
          ]
        },
        "firstPublishDate": "2021-10-20",
        "lastPublishDate": "2022-01-12",
        "providers": [
          "LastPass"
        ],
        "categories": {
          "domains": [
            "Application"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
