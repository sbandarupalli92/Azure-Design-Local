{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
     "MicrosoftSentinelLogAnalyticsWorkspaceName": {
            "defaultValue": "Microsoft Sentinel Workspace Name",
            "type": "string"
          },
     "PlaybookName": {
      "defaultValue": "Log4jIndicatorProcessor",
      "type": "string"
    },
    "Playbook2Name": {
      "defaultValue": "BatchImportToSentinel",
      "type": "string"
    },
    "UserName": {
            "defaultValue": "<username>@<domain>",
            "type": "string"
          }        
    },
    "variables": {"AzureMonitorLogsConnectionName": "[concat('azuremonitorlogs-', parameters('PlaybookName'))]"},
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureMonitorLogsConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
              "displayName": "[parameters('UserName')]",
              "customParameterValues": {},
              "api": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
              }
            }
          },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2016-06-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
             "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                         "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                    }
                                           
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Day",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@body('Select_Log4j_indicators_and_transform_to_tiIndicators')",
                            "actions": {
                                "BatchImportToSentinel": {
                                    "runAfter": {},
                                    "type": "SendToBatch",
                                    "inputs": {
                                        "batchName": "tiIndicators",
                                        "content": "@items('For_each')",
                                        "host": {
                                            "triggerName": "Batch_messages",
                                            "workflow": {
                                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/', parameters('Playbook2Name'))]"
                                            }
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Select_Log4j_indicators_and_transform_to_tiIndicators": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Run_query_and_list_results_V2_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Run_query_and_list_results_V2_2')",
                                "schema": {
                                    "properties": {
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "IPAddress": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "IPAddress"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Run_query_and_list_results_V2_2": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "query": "externaldata(IPAddress: string)[h@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/Log4j_IOC_List.csv\"]\nwith (ignoreFirstRecord = true)",
                                    "timerange": {
                                        "relativeTimeRange": "Last 24 hours"
                                    },
                                    "timerangetype": "2"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/queryDataV2",
                                "queries": {
                                    "resourcegroups": "[resourceGroup().name]",
                                    "resourcename": "[parameters('MicrosoftSentinelLogAnalyticsWorkspaceName')]",
                                    "resourcetype": "Log Analytics Workspace",
                                    "subscriptions": "[subscription().subscriptionId]"
                        
                                }
                            }
                        },
                        "Select_Log4j_indicators_and_transform_to_tiIndicators": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@body('Parse_JSON')?['value']",
                                "select": {
                                    "action": "alert",
                                    "confidence": "100",
                                    "description": "Microsoft Log4j threat indicator",
                                    "expirationDateTime": "2030-05-01T00:00:00.0000000Z",
                                    "networkIPv4": "@item()?['IPAddress']",
                                    "targetProduct": "Azure Sentinel",
                                    "threatType": "WatchList",
                                    "tlpLevel": "white"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureMonitorLogsConnectionName'))]",
                                "connectionName": "[variables('AzureMonitorLogsConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                              }
                        }
                    }
                   
                }
            }

        }            
        
    ]
}