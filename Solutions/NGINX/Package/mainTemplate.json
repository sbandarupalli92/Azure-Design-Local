{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Manoj Arimanda - v-marimanda@microsoft.com",
    "comments": "Solution template for Nginx"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Sentinel is setup"
      }
    },
    "formattedTimeNow": {
      "type": "string",
      "defaultValue": "[utcNow('g')]",
      "metadata": {
        "description": "Appended to workbook displayNames to make them unique"
      }
    },
    "workbook1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the workbook"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Nginx",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "connector1-name": {
      "type": "string",
      "defaultValue": "37ec2603-3946-4ea6-9527-e0719948abd7"
    },
    "analytic1-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic2-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic3-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic4-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic5-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic6-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic7-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic8-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic9-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    },
    "analytic10-id": {
      "type": "string",
      "defaultValue": "[newGuid()]",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the scheduled alert rule"
      }
    }
  },
  "variables": {
    "NGINX_workbook": "NGINX_workbook",
    "_NGINX_workbook": "[variables('NGINX_workbook')]",
    "workbook-source": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'))]",
    "_workbook-source": "[variables('workbook-source')]",
    "workspace-dependency": "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
    "NGINXHTTPServer_Parser": "NGINXHTTPServer_Parser",
    "_NGINXHTTPServer_Parser": "[variables('NGINXHTTPServer_Parser')]",
    "NGINXUncommonUAsString_HuntingQueries": "NGINXUncommonUAsString_HuntingQueries",
    "_NGINXUncommonUAsString_HuntingQueries": "[variables('NGINXUncommonUAsString_HuntingQueries')]",
    "NGINXAbnormalRequestSize_HuntingQueries": "NGINXAbnormalRequestSize_HuntingQueries",
    "_NGINXAbnormalRequestSize_HuntingQueries": "[variables('NGINXAbnormalRequestSize_HuntingQueries')]",
    "NGINXRareFilesRequested_HuntingQueries": "NGINXRareFilesRequested_HuntingQueries",
    "_NGINXRareFilesRequested_HuntingQueries": "[variables('NGINXRareFilesRequested_HuntingQueries')]",
    "NGINXRareURLsRequested_HuntingQueries": "NGINXRareURLsRequested_HuntingQueries",
    "_NGINXRareURLsRequested_HuntingQueries": "[variables('NGINXRareURLsRequested_HuntingQueries')]",
    "NGINXRequestsFromBotsCrawlers_HuntingQueries": "NGINXRequestsFromBotsCrawlers_HuntingQueries",
    "_NGINXRequestsFromBotsCrawlers_HuntingQueries": "[variables('NGINXRequestsFromBotsCrawlers_HuntingQueries')]",
    "NGINXRequestsToUnexistingFiles_HuntingQueries": "NGINXRequestsToUnexistingFiles_HuntingQueries",
    "_NGINXRequestsToUnexistingFiles_HuntingQueries": "[variables('NGINXRequestsToUnexistingFiles_HuntingQueries')]",
    "NGINXTopFilesRequested_HuntingQueries": "NGINXTopFilesRequested_HuntingQueries",
    "_NGINXTopFilesRequested_HuntingQueries": "[variables('NGINXTopFilesRequested_HuntingQueries')]",
    "NGINXTopFilesWithErrorRequests_HuntingQueries": "NGINXTopFilesWithErrorRequests_HuntingQueries",
    "_NGINXTopFilesWithErrorRequests_HuntingQueries": "[variables('NGINXTopFilesWithErrorRequests_HuntingQueries')]",
    "NGINXTopURLsClientErrors_HuntingQueries": "NGINXTopURLsClientErrors_HuntingQueries",
    "_NGINXTopURLsClientErrors_HuntingQueries": "[variables('NGINXTopURLsClientErrors_HuntingQueries')]",
    "NGINXTopURLsServerErrors_HuntingQueries": "NGINXTopURLsServerErrors_HuntingQueries",
    "_NGINXTopURLsServerErrors_HuntingQueries": "[variables('NGINXTopURLsServerErrors_HuntingQueries')]",
    "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
    "_connector1-source": "[variables('connector1-source')]",
    "NGINXHTTPServerConnector": "NGINXHTTPServerConnector",
    "_NGINXHTTPServerConnector": "[variables('NGINXHTTPServerConnector')]",
    "NGINXCommandsInRequest_AnalyticalRules": "NGINXCommandsInRequest_AnalyticalRules",
    "_NGINXCommandsInRequest_AnalyticalRules": "[variables('NGINXCommandsInRequest_AnalyticalRules')]",
    "NGINXCoreDump_AnalyticalRules": "NGINXCoreDump_AnalyticalRules",
    "_NGINXCoreDump_AnalyticalRules": "[variables('NGINXCoreDump_AnalyticalRules')]",
    "NGINXDifferentUAsFromSingleIP_AnalyticalRules": "NGINXDifferentUAsFromSingleIP_AnalyticalRules",
    "_NGINXDifferentUAsFromSingleIP_AnalyticalRules": "[variables('NGINXDifferentUAsFromSingleIP_AnalyticalRules')]",
    "NGINXKnownMaliciousUserAgent_AnalyticalRules": "NGINXKnownMaliciousUserAgent_AnalyticalRules",
    "_NGINXKnownMaliciousUserAgent_AnalyticalRules": "[variables('NGINXKnownMaliciousUserAgent_AnalyticalRules')]",
    "NGINXMultipleClientErrorsFromSingleIP_AnalyticalRules": "NGINXMultipleClientErrorsFromSingleIP_AnalyticalRules",
    "_NGINXMultipleClientErrorsFromSingleIP_AnalyticalRules": "[variables('NGINXMultipleClientErrorsFromSingleIP_AnalyticalRules')]",
    "NGINXMultipleServerErrorsFromSingleIP_AnalyticalRules": "NGINXMultipleServerErrorsFromSingleIP_AnalyticalRules",
    "_NGINXMultipleServerErrorsFromSingleIP_AnalyticalRules": "[variables('NGINXMultipleServerErrorsFromSingleIP_AnalyticalRules')]",
    "NGINXPrivateIPinUrl_AnalyticalRules": "NGINXPrivateIPinUrl_AnalyticalRules",
    "_NGINXPrivateIPinUrl_AnalyticalRules": "[variables('NGINXPrivateIPinUrl_AnalyticalRules')]",
    "NGINXPutAndGetFileFromSameIP_AnalyticalRules": "NGINXPutAndGetFileFromSameIP_AnalyticalRules",
    "_NGINXPutAndGetFileFromSameIP_AnalyticalRules": "[variables('NGINXPutAndGetFileFromSameIP_AnalyticalRules')]",
    "NGINXRequestToSensitiveFiles_AnalyticalRules": "NGINXRequestToSensitiveFiles_AnalyticalRules",
    "_NGINXRequestToSensitiveFiles_AnalyticalRules": "[variables('NGINXRequestToSensitiveFiles_AnalyticalRules')]",
    "NGINXSqlPattern_AnalyticalRules": "NGINXSqlPattern_AnalyticalRules",
    "_NGINXSqlPattern_AnalyticalRules": "[variables('NGINXSqlPattern_AnalyticalRules')]",
    "sourceId": "azuresentinel.azure-sentinel-solution-nginx",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/workbooks",
      "name": "[parameters('workbook1-id')]",
      "location": "[parameters('workspace-location')]",
      "kind": "shared",
      "apiVersion": "2021-08-01",
      "properties": {
        "displayName": "[concat(parameters('workbook1-name'), ' - ', parameters('formattedTimeNow'))]",
        "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"**NOTE**: This data connector depends on a parser based on Kusto Function **NGINXHTTPServer** to work as expected. [Follow steps to get this Kusto Function](https://aka.ms/sentinel-NGINXHTTP-parser)\"},\"name\":\"text - 8\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"cd8447d9-b096-4673-92d8-2a1e8291a125\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"description\":\"Sets the time name for analysis\",\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":900000},{\"durationMs\":3600000},{\"durationMs\":86400000},{\"durationMs\":604800000},{\"durationMs\":2592000000},{\"durationMs\":7776000000}]},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 11\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NGINXHTTPServer\\r\\n| make-series TotalEvents = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain};\",\"size\":0,\"title\":\"Events Over Time\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"graphSettings\":{\"type\":0}},\"customWidth\":\"60\",\"name\":\"query - 12\",\"styleSettings\":{\"maxWidth\":\"55\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"//Total Http status code  result\\r\\nNGINXHTTPServer\\r\\n| where isnotempty( HttpStatusCode)\\r\\n| extend HttpStatus = case(\\r\\n    HttpStatusCode startswith \\\"1\\\", \\\"Informational\\\", \\r\\n    HttpStatusCode startswith \\\"2\\\", \\\"Success\\\", \\r\\n    HttpStatusCode startswith \\\"3\\\", \\\"Redirect\\\",\\r\\n    HttpStatusCode startswith \\\"4\\\", \\\"Client Error\\\",\\r\\n    HttpStatusCode startswith \\\"5\\\", \\\"Server Error\\\",\\r\\n    \\\"Unknown\\\")\\r\\n| summarize TotalHttpStatus = count() by HttpStatus\",\"size\":3,\"title\":\"HTTP Status Codes\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"30\",\"name\":\"query - 0\",\"styleSettings\":{\"maxWidth\":\"30\"}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NGINXHTTPServer\\r\\n| where isnotempty( SrcIpAddr)\\r\\n| summarize dcount(SrcIpAddr) \",\"size\":3,\"title\":\"Unique IP Addresses\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"name\":\"query - 0\"}]},\"name\":\"group - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NGINXHTTPServer\\r\\n| where HttpStatusCode >= 500 and HttpStatusCode <= 599 \\r\\n| count\",\"size\":3,\"title\":\"Total Server Errors\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"name\":\"query - 0\"}]},\"name\":\"group - 2\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NGINXHTTPServer\\r\\n| where HttpStatusCode >= 400 and HttpStatusCode <= 499 \\r\\n| count\",\"size\":3,\"title\":\"Total Client Errors\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"card\",\"textSettings\":{\"style\":\"bignumber\"}},\"name\":\"query - 0\"}]},\"name\":\"group - 2\"}]},\"customWidth\":\"10\",\"name\":\"group - 9\",\"styleSettings\":{\"maxWidth\":\"100\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"//Top IP requested\\r\\nNGINXHTTPServer\\r\\n| summarize TotalRequests = count() by SrcIpAddr\\r\\n| project-rename SourceIP=SrcIpAddr\\r\\n| top 10 by TotalRequests desc \",\"size\":3,\"title\":\"Top 10 Sources\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"34\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"//Top IP requested with server error\\r\\nNGINXHTTPServer\\r\\n| where HttpStatusCode >= 500 and HttpStatusCode <600\\r\\n| summarize TotalEvents = count() by SrcIpAddr\\r\\n| project-rename SourceIP = SrcIpAddr\\r\\n| top 10 by TotalEvents desc \",\"size\":3,\"title\":\"Top Source IP addresses with server error\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"33\",\"name\":\"query - 3\",\"styleSettings\":{\"margin\":\"10\",\"padding\":\"10\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"//Top IP requested with client error\\r\\nNGINXHTTPServer\\r\\n| where HttpStatusCode >= 400 and HttpStatusCode <500\\r\\n| summarize TotalEvents = count() by SrcIpAddr\\r\\n| project-rename SourceIP = SrcIpAddr\\r\\n| top 10 by SourceIP desc \",\"size\":3,\"title\":\"Top Source IP addresses with client error\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"sortBy\":[{\"itemKey\":\"TotalEvents\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"TotalEvents\",\"sortOrder\":2}]},\"customWidth\":\"33\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"//Top file requested\\r\\nNGINXHTTPServer\\r\\n| extend File = extract(@\\\".*\\\\/([a-zA-Z0-9-._]*)\\\", 1, tostring(UrlOriginal))\\r\\n| where isnotempty(File)\\r\\n| summarize TotalEvents = count() by File\\r\\n| top 10 by TotalEvents desc\",\"size\":3,\"title\":\"Top files requested\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"barchart\"},\"name\":\"query - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NGINXHTTPServer\\r\\n| extend File = extract(@\\\".*\\\\/([a-zA-Z0-9-._]*)\\\", 1, tostring(UrlOriginal))\\r\\n| where isnotempty(File)\\r\\n| sort by TimeGenerated desc \\r\\n| project File, strcat(iff(HttpStatusCode startswith \\\"4\\\" or HttpStatusCode startswith \\\"5\\\", '❌', '✅')), HttpStatusCode\\r\\n| project-rename Result = Column1, FileName=File\",\"size\":0,\"title\":\"Latest files accessed\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"rowLimit\":50,\"filter\":true}},\"customWidth\":\"35\",\"name\":\"query - 12\",\"styleSettings\":{\"maxWidth\":\"33\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"NGINXHTTPServer\\r\\n| where  TimeGenerated > ago(40d)\\r\\n| where HttpStatusCode >= 400 and HttpStatusCode <= 599 \\r\\n| where UrlOriginal != '/'\\r\\n| summarize TotalEvents = count() by tostring(UrlOriginal)\\r\\n| top 10 by TotalEvents desc \",\"size\":3,\"title\":\"Top URLs with Error\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\"},\"customWidth\":\"35\",\"name\":\"query - 10\",\"styleSettings\":{\"maxWidth\":\"100\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let Average_Body_Bytes = NGINXHTTPServer\\r\\n| summarize Avg_ByUrl = avg(tolong(HttpResponseBodyBytes))\\r\\n| extend K = 1;\\r\\nNGINXHTTPServer\\r\\n| extend K = 1\\r\\n| join kind=inner Average_Body_Bytes on K\\r\\n| where HttpResponseBodyBytes > Avg_ByUrl*1.5\\r\\n| order by tolong(HttpResponseBodyBytes)\\r\\n| summarize RequestSize=max(tolong(HttpResponseBodyBytes)) by SrcIpAddr\\r\\n| project-rename SourceIP=SrcIpAddr\\r\\n\",\"size\":3,\"title\":\"Top sources with large request size\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"rowLimit\":10},\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"SrcIpAddr\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"LargeRequest\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true}},\"customWidth\":\"30\",\"name\":\"query - 7\"}],\"fromTemplateId\":\"sentinel-NGINXWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
        "version": "1.0",
        "sourceId": "[variables('_workbook-source')]",
        "category": "sentinel"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[parameters('workspace')]",
      "location": "[parameters('workspace-location')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Nginx Data Parser",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "Nginx Data Parser",
            "category": "Samples",
            "functionAlias": "NGINXHTTPServer",
            "query": "\nlet nginx_accesslog_events =() {\r\nNGINX_CL\r\n| where RawData matches regex @'(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}).*\\[.*\\]\\s\\\"(GET|POST).*?\\\"\\s([1-5][0-9]{2})\\s(\\d+)\\s\\\"(.*?)\\\"\\s\\\"(.*?)\\\".*'\r\n| extend EventProduct = 'NGINX'\r\n| extend EventType = 'AccessLog'\r\n| extend EventData = split(RawData, '\"')\r\n| extend SubEventData0 = split(trim_start(@' ', (trim_end(@' ', tostring(EventData[0])))), ' ')\r\n| extend SubEventData1 = split(EventData[1], ' ')\r\n| extend SubEventData2 = split(trim_start(@' ', (trim_end(@' ', tostring(EventData[2])))), ' ')\r\n| extend SrcIpAddr = tostring(SubEventData0[0])\r\n| extend SrcUserName = SubEventData0[2]\r\n| extend EventStartTime = todatetime(replace(@'\\/', @'-', replace(@'(\\d{2}\\/\\w{3}\\/\\d{4}):(\\d{2}\\:\\d{2}\\:\\d{2})', @'\\1 \\2', extract(@'\\[(.*?)\\+\\d+\\]', 1, RawData))))\r\n| extend HttpRequestMethod = SubEventData1[0]\r\n| extend UrlOriginal = SubEventData1[1]\r\n| extend HttpVersion = SubEventData1[2]\r\n| extend HttpStatusCode = SubEventData2[0]\r\n| extend HttpResponseBodyBytes = SubEventData2[1]\r\n| extend HttpReferrerOriginal = EventData[3]\r\n| extend HttpUserAgentOriginal = EventData[5]\r\n};\r\nlet nginx_errorlog_events=() {\r\nNGINX_CL\r\n| where RawData matches regex @'\\A\\d{4}\\/\\d{2}\\/\\d{2}\\s+\\d{2}\\:\\d{2}\\:\\d{2}\\s+\\[.*?\\]\\s\\d+\\#\\d+\\:'\r\n| extend EventProduct = 'NGINX'\r\n| extend EventType = 'ErrorLog'\r\n| extend EventType = 'ErrorLog'\r\n| extend EventSeverity = extract(@'\\[(.*?)\\]', 1, RawData)\r\n| extend EventStartTime = todatetime(replace(@'\\/', '-', extract(@'\\A(.*?)\\s\\[', 1, RawData)))\r\n| extend SrcIpAddr = extract(@'client: (\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})', 1, RawData)\r\n| extend ProcessId = extract(@'\\]\\s(\\d+)\\#', 1, RawData)\r\n| extend ThreadId = extract(@'\\]\\s\\d+\\#(\\d+)\\:', 1, RawData)\r\n| extend EventMessage = extract(@'\\d+\\#\\d+\\:\\s(.*)', 1, RawData)\r\n};\r\nunion isfuzzy=true nginx_accesslog_events, nginx_errorlog_events\r\n| project TimeGenerated\r\n        , EventProduct\r\n        , EventType\r\n        , EventSeverity\r\n        , EventStartTime\r\n        , SrcIpAddr\r\n        , SrcUserName\r\n        , HttpRequestMethod\r\n        , UrlOriginal\r\n        , HttpVersion\r\n        , HttpStatusCode\r\n        , HttpResponseBodyBytes\r\n        , HttpReferrerOriginal\r\n        , HttpUserAgentOriginal\r\n        , ProcessId\r\n        , ThreadId\r\n        , EventMessage\r\n",
            "version": 1
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Nginx Hunting Query 1",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "NGINX - Uncommon user agent strings",
            "category": "Hunting Queries",
            "query": "let length = 20;\nNGINXHTTPServer\n| where TimeGenerated > ago(100d)\n| where strlen(HttpUserAgentOriginal) < length\n| extend UrlCustomEntity = HttpUserAgentOriginal\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches uncommon user agent strings."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Nginx Hunting Query 2",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "NGINX - Abnormal request size",
            "category": "Hunting Queries",
            "query": "let Average_Body_Bytes = NGINXHTTPServer\n| where TimeGenerated > ago(30d)\n| summarize Avg_Size = avg(tolong(HttpResponseBodyBytes))\n| extend K = 1;\nNGINXHTTPServer\n| where TimeGenerated > ago(24h)\n| extend File = extract(@\"(.*\\/)?(.*)\", 2, tostring(UrlOriginal))\n| extend K = 1\n| join kind=inner Average_Body_Bytes on K\n| where tolong(HttpResponseBodyBytes) > Avg_Size\n| extend FileCustomEntity = File\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query shows abnormal request size."
              },
              {
                "name": "tactics",
                "value": "Exfiltration,Collection"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Nginx Hunting Query 3",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "NGINX - Rare files requested",
            "category": "Hunting Queries",
            "query": "NGINXHTTPServer\n| where TimeGenerated > ago(24h)\n| extend File = extract(@\"(.*\\/)?(.*)\", 2, tostring(UrlOriginal))\n| where isnotempty(File)\n| summarize RareFiles = count() by File\n| top 20 by RareFiles asc \n| extend FileCustomEntity = File\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query shows rare files requested"
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Nginx Hunting Query 4",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "NGINX - Rare URLs requested",
            "category": "Hunting Queries",
            "query": "NGINXHTTPServer\n| where TimeGenerated > ago(24h)\n| summarize count() by tostring(UrlOriginal)\n| top 20 by count_ asc \n| extend UrlCustomEntity = UrlOriginal\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query shows rare URLs requested."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Nginx Hunting Query 5",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "NGINX - Requests from bots and crawlers",
            "category": "Hunting Queries",
            "query": "NGINXHTTPServer\n| where HttpUserAgentOriginal matches regex @'bot|crawler|baiduspider|80legs|ia_archiver|voyager|curl|wget|yahoo!|slurp|mediapartners-google'\n| extend UrlCustomEntity = HttpUserAgentOriginal\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query searches requests from bots and crawlers."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Nginx Hunting Query 6",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "NGINX - Requests to unexisting files",
            "category": "Hunting Queries",
            "query": "NGINXHTTPServer\n| where TimeGenerated > ago(24h)\n| where EventType =~ \"ErrorLog\"\n| where EventMessage contains \"File does not exist\"\n| extend File = extract(@\"(.*\\/)(.*)\", 2, tostring(EventMessage))\n| extend FileCustomEntity = File\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query shows list of requests to unexisting files"
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Nginx Hunting Query 7",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "NGINX - Top files requested",
            "category": "Hunting Queries",
            "query": "NGINXHTTPServer\n| where TimeGenerated > ago(24h)\n| extend File = extract(@\"(.*\\/)?(.*)\", 2, tostring(UrlOriginal))\n| where isnotempty(File)\n| summarize TotalFile = count() by File\n| top 20 by TotalFile desc\n| extend FileCustomEntity = File\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query shows list of files requested"
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Nginx Hunting Query 8",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "NGINX - Top files with error requests",
            "category": "Hunting Queries",
            "query": "NGINXHTTPServer\n| where TimeGenerated > ago(24h)\n| where HttpStatusCode >= 400 and HttpStatusCode <= 599 \n| extend File = extract(@\"(.*\\/)?(.*)\", 2, tostring(UrlOriginal))\n| where isnotempty(File)\n| summarize TotalFile = count() by File\n| top 20 by TotalFile desc\n| extend FileCustomEntity = File\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query shows list of files with error requests."
              },
              {
                "name": "tactics",
                "value": "InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Nginx Hunting Query 9",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "NGINX - Top URLs client errors",
            "category": "Hunting Queries",
            "query": "NGINXHTTPServer\n| where TimeGenerated > ago(24h)\n| where HttpStatusCode >= 400 and HttpStatusCode <= 499\n| summarize TopUrls = count() by (tostring(UrlOriginal))\n| top 20 by TopUrls desc \n| extend UrlCustomEntity = UrlOriginal\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query shows URLs list with client errors."
              },
              {
                "name": "tactics",
                "value": "Impact,InitialAccess"
              }
            ]
          }
        },
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "Nginx Hunting Query 10",
          "dependsOn": [
            "[variables('workspace-dependency')]"
          ],
          "properties": {
            "eTag": "*",
            "displayName": "NGINX - Top URLs server errors",
            "category": "Hunting Queries",
            "query": "NGINXHTTPServer\n| where TimeGenerated > ago(24h)\n| where HttpStatusCode >= 500 and HttpStatusCode <= 599\n| summarize TopUrls = count() by tostring(UrlOriginal)\n| top 20 by TopUrls desc \n| extend UrlCustomEntity = UrlOriginal\n",
            "version": 1,
            "tags": [
              {
                "name": "description",
                "value": "Query shows URLs list with server errors."
              },
              {
                "name": "tactics",
                "value": "Impact,InitialAccess"
              }
            ]
          }
        }
      ]
    },
    {
      "id": "[variables('_connector1-source')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "NGINX HTTP Server",
          "publisher": "Nginx",
          "descriptionMarkdown": "NGINX HTTP Server data connector provides the capability to ingest [NGINX HTTP Server](https://nginx.org/en/) events into Azure Sentinel. Refer to [NGINX Logs documentation](https://nginx.org/en/docs/http/ngx_http_log_module.html) for more information.",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "NGINX_CL",
              "baseQuery": "NGINXHTTPServer"
            }
          ],
          "sampleQueries": [
            {
              "description": "Top 10 Clients (Source IP)",
              "query": "NGINXHTTPServer\n | summarize count() by SrcIpAddr\n | top 10 by count_"
            }
          ],
          "dataTypes": [
            {
              "name": "NGINX_CL",
              "lastDataReceivedQuery": "NGINXHTTPServer\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "NGINXHTTPServer\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This data connector depends on a parser based on a Kusto Function to work as expected. [Follow these steps](https://aka.ms/sentinel-NGINXHTTP-parser) to create the Kusto Functions alias, **NGINXHTTPServer**"
            },
            {
              "description": "Install the agent on the NGINX HTTP Server where the logs are generated.\n\n> Logs from NGINX HTTP Server deployed on Linux or Windows servers are collected by **Linux** or **Windows** agents.",
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the Linux agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Linux Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Linux Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnLinuxNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ],
              "title": "1. Install and onboard the agent for Linux or Windows"
            },
            {
              "instructions": [
                {
                  "parameters": {
                    "title": "Choose where to install the Windows agent:",
                    "instructionSteps": [
                      {
                        "title": "Install agent on Azure Windows Virtual Machine",
                        "description": "Select the machine to install the agent on and then click **Connect**.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnVirtualMachine"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      },
                      {
                        "title": "Install agent on a non-Azure Windows Machine",
                        "description": "Download the agent on the relevant machine and follow the instructions.",
                        "instructions": [
                          {
                            "parameters": {
                              "linkType": "InstallAgentOnNonAzure"
                            },
                            "type": "InstallAgent"
                          }
                        ]
                      }
                    ]
                  },
                  "type": "InstructionStepsGroup"
                }
              ]
            },
            {
              "description": "Configure the custom log directory to be collected",
              "instructions": [
                {
                  "parameters": {
                    "linkType": "OpenCustomLogsSettings"
                  },
                  "type": "InstallAgent"
                }
              ],
              "title": "2. Configure the logs to be collected"
            },
            {
              "description": "1. Select the link above to open your workspace advanced settings \n2. From the left pane, select **Data**, select **Custom Logs** and click **Add+**\n3. Click **Browse** to upload a sample of a NGINX HTTP Server log file (e.g. access.log or error.log). Then, click **Next >**\n4. Select **New line** as the record delimiter and click **Next >**\n5. Select **Windows** or **Linux** and enter the path to NGINX HTTP logs based on your configuration. Example: \n - **Linux** Directory:  '/var/log/nginx/*.log' \n6. After entering the path, click the '+' symbol to apply, then click **Next >** \n7. Add **NGINX_CL** as the custom log Name and click **Done**"
            }
          ],
          "additionalRequirementBanner": "This data connector depends on a parser based on Kusto Function to work as expected. Follow the steps to use this Kusto Function alias **NGINXHTTPServer** in queries and workbooks. [Follow steps to get this Kusto Function>](https://aka.ms/sentinel-NGINXHTTP-parser)"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic1-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects command in URI",
        "displayName": "NGINX - Command in URI",
        "enabled": false,
        "query": "let cmd_list = dynamic(['cat%20/etc/passwd', '/etc/passwd', 'ping -i', '/usr/bin/id(', '%2f%75%73%72%2f%62%69%6e%2f%69%64', 'phpinfo()', '%70%68%70%69%6e%66%6f%28%29', ';id', '%3b%69%64', '/bin/bash -c', '%2f%62%69%6e%2f%62%61%73%68%20%2d%63%27', '/bin/bash', '%2f%62%69%6e%2f%62%61%73%68', 'sleep(', '%73%6c%65%65%70%28', 'curl', '%63%75%72%6c', '&dir', '%26%64%69%72', '& dir', '%26%20%64%69%72', '<script>', '%3c%73%63%72%69%70%74%3e', 'eval(', '%65%76%61%6c%28', 'exec(', '%65%78%65%63%28', 'whoami', '%77%68%6f%61%6d%69', 'wget', 'python', 'gcc', 'uname', 'systeminfo', '%77%67%65%74', '%70%79%74%68%6f%6e', '%75%6e%61%6d%65', '%73%79%73%74%65%6d%69%6e%66%6f']);\nNGINXHTTPServer\n| where UrlOriginal has_any (cmd_list)\n| extend UrlCustomEntity = UrlOriginal\n",
        "queryFrequency": "PT10M",
        "queryPeriod": "PT10M",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "UrlCustomEntity",
                "identifier": "Url"
              }
            ],
            "entityType": "URL"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic2-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects a core dump of a crashing Nginx worker process, which could be a signal of a serious problem or exploitation attempts.",
        "displayName": "NGINX - Core Dump",
        "enabled": false,
        "query": "NGINXHTTPServer\n| where EventType =~ \"ErrorLog\"\n| where EventMessage contains 'exited on signal 6 (core dumped)'\n| extend ProcessIdCustomEntity = ProcessId\n",
        "queryFrequency": "PT10M",
        "queryPeriod": "PT10M",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "ProcessIdCustomEntity",
                "identifier": "ProcessId"
              }
            ],
            "entityType": "Process"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic3-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects requests with different user agents from one source in short timeframe.",
        "displayName": "NGINX - Multiple user agents for single source",
        "enabled": false,
        "query": "let threshold = 5;\nNGINXHTTPServer\n| summarize makeset(HttpUserAgentOriginal) by SrcIpAddr, bin(TimeGenerated, 5m)\n| extend ua_count = array_length(set_HttpUserAgentOriginal)\n| where ua_count > threshold\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic4-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects known malicious user agents",
        "displayName": "NGINX - Known malicious user agent",
        "enabled": false,
        "query": "let mal_ua_list = dynamic(['Nikto', '(hydra)', '.nasl', 'absinthe', 'advanced email extractor', 'arachni/', 'autogetcontent', 'bilbo', 'BFAC', 'brutus', 'brutus/aet', 'bsqlbf', 'cgichk', 'cisco-torch', 'commix', 'core-project/1.0', 'crimscanner/', 'datacha0s', 'dirbuster', 'domino hunter', 'dotdotpwn', 'email extractor', 'fhscan core 1.', 'floodgate', 'get-minimal', 'gootkit auto-rooter scanner', 'grabber', 'grendel-scan', 'havij', 'inspath', 'internet ninja', 'jaascois', 'zmeu', 'masscan', 'metis', 'morfeus', 'mysqloit', 'n-stealth', 'nessus', 'netsparker', 'nmap nse', 'nmap scripting engine', 'nmap-nse', 'nsauditor', 'openvas', 'pangolin', 'paros', 'pmafind', 'prog.customcrawler', 'qualys was', 's.t.a.l.k.e.r.', 'security scan', 'springenwerk', 'sql power injector', 'sqlmap', 'sqlninja', 'teh forest lobster', 'this is an exploit', 'toata dragostea', 'toata dragostea mea pentru diavola', 'uil2pn', 'user-agent:', 'vega/', 'voideye', 'w3af.sf.net', 'w3af.sourceforge.net', 'w3af.org', 'webbandit', 'webinspect', 'webshag', 'webtrends security analyzer', 'webvulnscan', 'whatweb', 'whcc/', 'wordpress hash grabber', 'xmlrpc exploit', 'WPScan', 'XSpider', 'SF/', 'FooBar/42', 'ScanAlert', 'Webscanner', 'Webster', 'fantomCrew', 'fantomBrowser', 'visvo', 'magereport', 'ltx71', 'websiteprotection', 'BigCliqueBOT', '(BOT for JCE)']);\nNGINXHTTPServer\n| where HttpUserAgentOriginal has_any (mal_ua_list)\n| extend IPCustomEntity = SrcIpAddr, MalwareCustomEntity = HttpUserAgentOriginal\n",
        "queryFrequency": "PT10M",
        "queryPeriod": "PT10M",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "MalwareCustomEntity",
                "identifier": "Name"
              }
            ],
            "entityType": "Malware"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic5-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects multiple client errors from one source in short timeframe",
        "displayName": "NGINX - Multiple client errors from single IP address",
        "enabled": false,
        "query": "let threshold = 100;\nNGINXHTTPServer\n| where tolong(HttpStatusCode) >= 400 and tolong(HttpStatusCode) <= 499 \n| summarize MultipleClientErrors = count() by SrcIpAddr, bin(TimeGenerated, 5m)\n| where MultipleClientErrors > threshold\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic6-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects multiple server errors from one source in short timeframe",
        "displayName": "NGINX - Multiple server errors from single IP address",
        "enabled": false,
        "query": "let threshold = 100;\nNGINXHTTPServer\n| where tolong(HttpStatusCode) >= 500 and tolong(HttpStatusCode) <= 599 \n| summarize MultipleServerErrors = count() by SrcIpAddr, bin(TimeGenerated, 5m)\n| where MultipleServerErrors > threshold\n| extend IPCustomEntity = SrcIpAddr\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "Impact",
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic7-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects requests to unusual URL",
        "displayName": "NGINX - Private IP address in URL",
        "enabled": false,
        "query": "NGINXHTTPServer\n| where UrlOriginal matches regex @'(10\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})|(172\\.1[6-9]\\.\\d{1,3}\\.\\d{1,3})|(172\\.2[0-9]\\.\\d{1,3}\\.\\d{1,3})|(172\\.3[0-1]\\.\\d{1,3}\\.\\d{1,3})|(192\\.168\\.\\d{1,3}\\.\\d{1,3})'\n| extend UrlCustomEntity = UrlOriginal\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "UrlCustomEntity",
                "identifier": "Url"
              }
            ],
            "entityType": "URL"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic8-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects put or get files from one source in short timeframe",
        "displayName": "NGINX - Put file and get file from same IP address",
        "enabled": false,
        "query": "let p = NGINXHTTPServer\n| where HttpRequestMethod in~ ('POST', 'PUT')\n| sort by EventStartTime asc\n| summarize post_time=min(EventStartTime) by SrcIpAddr, tostring(UrlOriginal);\nNGINXHTTPServer\n| where HttpRequestMethod =~ 'GET'\n| sort by EventStartTime asc\n| summarize get_time=min(EventStartTime) by SrcIpAddr, tostring(UrlOriginal)\n| join kind=innerunique (p) on UrlOriginal, SrcIpAddr\n| extend second = datetime_diff('second',get_time,post_time)\n| where second between (1 .. 300)\n| project second, post_time, get_time, SrcIpAddr, UrlOriginal\n| extend IPCustomEntity = SrcIpAddr, UrlCustomEntity = tostring(UrlOriginal)\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "UrlCustomEntity",
                "identifier": "Url"
              }
            ],
            "entityType": "URL"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic9-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects request to sensitive files.",
        "displayName": "NGINX - Request to sensitive files",
        "enabled": false,
        "query": "let forbidden_files = dynamic(['shadow', 'passwd', 'id_rsa']);\nNGINXHTTPServer\n| extend File = extract(@\"(.*\\/)?(.*)\", 2, tostring(UrlOriginal))\n| where File in (forbidden_files)\n| extend FileCustomEntity = File, UrlCustomEntity = UrlOriginal\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "PT1H",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "FileCustomEntity",
                "identifier": "Name"
              }
            ],
            "entityType": "File"
          },
          {
            "fieldMappings": [
              {
                "columnName": "UrlCustomEntity",
                "identifier": "Url"
              }
            ],
            "entityType": "URL"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/alertRules",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('analytic10-id'))]",
      "apiVersion": "2021-03-01-preview",
      "kind": "Scheduled",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "description": "Detects possible sql injection patterns",
        "displayName": "NGINX - Sql injection patterns",
        "enabled": false,
        "query": "let sql_patterns = dynamic([@\"1/*'*/\", @\"1'||'asd'||'\", @\"'1'='1\", @\"1' or '1'='1\", @\"1 or 1=1\", @\"1=1\", @\"1/*!1111'*/\", @\"'or''='\"]);\nNGINXHTTPServer\n| where UrlOriginal has_any (sql_patterns)\n| extend IPCustomEntity = SrcIpAddr, UrlCustomEntity = UrlOriginal\n",
        "queryFrequency": "PT10M",
        "queryPeriod": "PT10M",
        "severity": "High",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
          "InitialAccess"
        ],
        "entityMappings": [
          {
            "fieldMappings": [
              {
                "columnName": "IPCustomEntity",
                "identifier": "Address"
              }
            ],
            "entityType": "IP"
          },
          {
            "fieldMappings": [
              {
                "columnName": "UrlCustomEntity",
                "identifier": "Url"
              }
            ],
            "entityType": "URL"
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "1.0.4",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "Nginx",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Manoj Arimanda",
          "email": "v-marimanda@microsoft.com"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Workbook",
              "contentId": "[variables('_NGINX_workbook')]",
              "version": "1.0.4"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('_NGINXHTTPServer_Parser')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NGINXUncommonUAsString_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NGINXAbnormalRequestSize_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NGINXRareFilesRequested_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NGINXRareURLsRequested_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NGINXRequestsFromBotsCrawlers_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NGINXRequestsToUnexistingFiles_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NGINXTopFilesRequested_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NGINXTopFilesWithErrorRequests_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NGINXTopURLsClientErrors_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('_NGINXTopURLsServerErrors_HuntingQueries')]",
              "version": "1.0.4"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_NGINXHTTPServerConnector')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_NGINXCommandsInRequest_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_NGINXCoreDump_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_NGINXDifferentUAsFromSingleIP_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_NGINXKnownMaliciousUserAgent_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_NGINXMultipleClientErrorsFromSingleIP_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_NGINXMultipleServerErrorsFromSingleIP_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_NGINXPrivateIPinUrl_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_NGINXPutAndGetFileFromSameIP_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_NGINXRequestToSensitiveFiles_AnalyticalRules')]",
              "version": "1.0.4"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('_NGINXSqlPattern_AnalyticalRules')]",
              "version": "1.0.4"
            }
          ]
        },
        "firstPublishDate": "2021-12-16",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Security – Network", "Networking", "DevOps"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
